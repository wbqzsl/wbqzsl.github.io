<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wbq&#39;s Blog</title>
  
  <subtitle>Hello World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wbqzsl.github.io/"/>
  <updated>2019-06-01T06:05:00.712Z</updated>
  <id>http://wbqzsl.github.io/</id>
  
  <author>
    <name>wbq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何使用Hexo+Github搭建起属于你的博客</title>
    <link href="http://wbqzsl.github.io/2019/05/31/lesson/"/>
    <id>http://wbqzsl.github.io/2019/05/31/lesson/</id>
    <published>2019-05-31T12:49:22.000Z</published>
    <updated>2019-06-01T06:05:00.712Z</updated>
    
    <content type="html"><![CDATA[<p>就是本博客的搭建教程/笑</p><h3 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h3><p><strong>这个博客依赖于Github推出的Github Pages服务</strong></p><p><img src="/2019/05/31/lesson/github1.jpg" alt=""></p><p>Github Pages 是 Github 的静态页面托管服务。它设计的初衷是为了用户能够直接通过 Github 仓库来托管用户个人、组织或是项目的专属页面。</p><p><a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="noopener">Github Pages介绍</a></p><p>可以说相当于一个可直接用 git 管理内容的静态服务器，有许多人会用它来托管自己的个人博客（利用 Jekyll、Pelican 这一类静态页面生成工具，这里我们用的是hexo）或是在这上面发布自己的 HTML5 小游戏。当然这么好的东西也是有限制的。</p><p>Github Pages 的限制：</p><ul><li><p>仓库存储的所有文件不能超过 1 GB</p></li><li><p>页面的带宽限制是低于每月 100 GB 或是每月 100,000 次请求。</p></li><li><p>每小时最多只能部署 10 个静态网站。</p></li></ul><p>对于发布自己的简历或是部署自己的博客的这一类需求我想是不用担心这些限制的，如果真的不小心超了，Github 那边不会采取什么强制措施，而是会发一份邮件提醒你应该找一个更适合你的托管对象的服务。</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h4 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h4><p>先下载这个叫git的软件安装在自己的电脑上</p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载链接</a></p><p><strong>默认设置安装即可</strong></p><p>再安装这个环境node.js</p><p><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="noopener">32位下载链接</a><br><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="noopener">64位下载链接</a></p><p><strong>默认设置安装即可</strong></p><h4 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h4><p>两个都安装在完成后分别在cmd输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">npm -v</span><br><span class="line">git --<span class="keyword">version</span></span><br></pre></td></tr></table></figure><br>检查安装信息</p><h3 id="Github帐号注册与Github-Pages申请"><a href="#Github帐号注册与Github-Pages申请" class="headerlink" title="Github帐号注册与Github Pages申请"></a>Github帐号注册与Github Pages申请</h3><h4 id="Github帐号注册"><a href="#Github帐号注册" class="headerlink" title="Github帐号注册"></a>Github帐号注册</h4><p><a href="https://github.com/" target="_blank" rel="noopener">Github官网</a><br>注册很简单，这里就不说了</p><h4 id="Github-Pages申请"><a href="#Github-Pages申请" class="headerlink" title="Github Pages申请"></a>Github Pages申请</h4><p>登陆后新建一个repository<br>（在你头像旁边的+号里）</p><p>然后在Repository name下填写yourname.github.io</p><p><strong>（注意，这里的yourname一定是你的Github名称，不能随便取。你的Github名称叫tom,那么你的Repository name就是tom.github.io)</strong></p><p>点击界面右侧的Settings，你将会打开这个库的setting页面，向下拖动，直到看见GitHub Pages</p><p>点击Automatic page generator</p><p>Github将会自动替你创建出一个gh-pages的页面。 </p><h4 id="配置成功"><a href="#配置成功" class="headerlink" title="配置成功"></a>配置成功</h4><p>如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了！在浏览器输入yourname.github.io试试吧！（￣︶￣）↗　<br>如果yourname.github.io已经可以正常访问了，那么Github一侧的配置已经全部结束了。</p><p>界面如图<br><img src="/2019/05/31/lesson/531page.jpg" alt=""></p><p>——————————————<br>2019.5.31  21:52<br>先更到这吧<br>-——————————————<br>2019.6.1   12:27</p><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><h4 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h4><p>找个地方创建一个文件夹，重命名为<strong>你的博客名</strong><br>在cmd里依次输入</p><ul><li><p>D:(锁定路径，你的文件夹所在的硬盘)</p></li><li><p>cd /你的hexo文件夹路径（如/work/hexo）</p></li><li><p>npm install hexo-cli -g</p></li><li><p>npm install hexo –save</p></li></ul><p>输入hexo -v检查</p><p>出现如图的信息，则安装正确</p><p><img src="/2019/05/31/lesson/lesson61.png" alt=""></p><p>然后在你的博客文件夹里，右键<strong>git bash here</strong><br>依次执行输入<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm <span class="keyword">install</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><br><strong>注意！耐心等待直到出现$ 符号，才可以执行下一条指令</strong></p><p><img src="/2019/05/31/lesson/lesson612.png" alt=""></p><p>等待完成后</p><p>再输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure></p><p><img src="/2019/05/31/lesson/lesson613.png" alt=""></p><p>并在浏览器里输入<br><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><h4 id="配置成功-1"><a href="#配置成功-1" class="headerlink" title="配置成功"></a>配置成功</h4><p>如图</p><p><img src="/2019/05/31/lesson/lesson614.jpg" alt=""></p><p>恭喜你，hexo安装完成!</p><p><img src="/2019/05/31/lesson/hhh61.jpg" alt=""></p><h3 id="搭建到Github-page上"><a href="#搭建到Github-page上" class="headerlink" title="搭建到Github page上"></a>搭建到Github page上</h3><h4 id="博客信息填写"><a href="#博客信息填写" class="headerlink" title="博客信息填写"></a>博客信息填写</h4><p>打开博客根目录里的_comfig.yml文件</p><p><img src="/2019/05/31/lesson/lesson615.png" alt=""></p><p>这个文件是博客配置文件，以后会经常用到</p><p><img src="/2019/05/31/lesson/61.png" alt=""></p><ul><li>第一个是你博客标题</li><li>第二个是子标题</li><li>第三个是描述</li><li>作者你自己定</li><li>语言为zh-CN<br><strong>注意！每个:后面要加一个空格</strong><br>找到如图的地方</li></ul><p><img src="/2019/05/31/lesson/612.png" alt=""></p><p>照我的填写，把wbqzsl换成你的<strong>博客名</strong></p><h4 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h4><p><strong>这决定着哪台电脑能够部署你的博客，不要随意透露你的密钥</strong></p><p>在博客目录git bash here</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"wbq"</span> <span class="comment">//你的博客名</span></span><br><span class="line">git config --global user<span class="selector-class">.email</span> <span class="string">"gdutxiaoxu@163.com"</span><span class="comment">//你的qq邮箱就行</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"gdutxiaoxu@163.com"</span> <span class="comment">//输入一个路径存储ssh密匙</span></span><br></pre></td></tr></table></figure><p>然后在你输入的路径下找到并打开.ssh</p><p>打开id_rsa.pub<br>然后拷贝里面的内容，别拷贝那两行注释</p><p>然后在Github里找到你的库-&gt;设置<br><img src="/2019/05/31/lesson/615.png" alt=""><br><img src="/2019/05/31/lesson/616.png" alt=""><br>题目随便，把密钥粘贴到内容里</p><p>然后在cmd里输入<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span>@<span class="keyword">github</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure></p><p>如图<br><img src="/2019/05/31/lesson/617.png" alt=""></p><p>恭喜！你的博客密钥配置完成！</p><h4 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h4><p>在你博客根目录里右键<br>git bash here<br>输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><br><img src="/2019/05/31/lesson/618.png" alt=""></p><p>耐心等待后<br>在浏览器输入 <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a></p><p>如果出现了你在本地调试中的页面</p><p>那么恭喜你！部署成功！</p><h3 id="博客写作"><a href="#博客写作" class="headerlink" title="博客写作"></a>博客写作</h3><p>经过了上面的操作，你已经可以从你的电脑上部署到博客文章了</p><h4 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h4><p>在你博客根目录里右键<br>git bash here<br>输入<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span>  <span class="string">"这是题目最好不要中文"</span></span><br></pre></td></tr></table></figure><br>那么在你的博客根目录的Source文件夹里，就会新建一个名字.md的文件<br><strong>（建议修改_config.yml配置文件post_asset_folder项为true。这会在你新建博客的时候新建一个同名文件夹，写博客需要的资源可以放进去）</strong></p><p>打开 文章名.md即可开始写作</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>在vs里，文件-&gt;高级保存选项<br><img src="/2019/05/31/lesson/618.png" alt=""><br>调成这样，不然中文显示乱码</p><p>文章格式<br><img src="/2019/05/31/lesson/320.png" alt=""></p><h4 id="生成并部署博客"><a href="#生成并部署博客" class="headerlink" title="生成并部署博客"></a>生成并部署博客</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>耐心等待上传完成<br>访问 <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> 即可看到你写的博文<br>————————————<br>2019.6.1  13:52<br>现在相当于在互联网上有你的网站了<br>快去试试吧<br>下次更如何更换主题与美化博客</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;就是本博客的搭建教程/笑&lt;/p&gt;
&lt;h3 id=&quot;Github-Pages&quot;&gt;&lt;a href=&quot;#Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;Github Pages&quot;&gt;&lt;/a&gt;Github Pages&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这个
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>up主成长之路</title>
    <link href="http://wbqzsl.github.io/2019/05/24/bili/"/>
    <id>http://wbqzsl.github.io/2019/05/24/bili/</id>
    <published>2019-05-24T14:30:25.000Z</published>
    <updated>2019-05-24T14:43:32.128Z</updated>
    
    <content type="html"><![CDATA[<p>最近也一直在努力的做视频成为一个up呢<br><strong>这个链接里面有我做的一些视频</strong><br>制作不易，进来看看呗<br>~(￣▽￣)~*<br><a id="more"></a></p><iframe src="//player.bilibili.com/player.html?aid=53326686&cid=93296156&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=40811392&cid=71673497&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=45248204&cid=79220893&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近也一直在努力的做视频成为一个up呢&lt;br&gt;&lt;strong&gt;这个链接里面有我做的一些视频&lt;/strong&gt;&lt;br&gt;制作不易，进来看看呗&lt;br&gt;~(￣▽￣)~*&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sfml图形库的配置</title>
    <link href="http://wbqzsl.github.io/2019/05/24/c/"/>
    <id>http://wbqzsl.github.io/2019/05/24/c/</id>
    <published>2019-05-24T09:28:30.000Z</published>
    <updated>2019-05-24T14:24:28.613Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=526646591&auto=0&height=66"></iframe><br>好久没更新了<br>前一段时间在学sfml图形库（c++）的使用<br>包括环境的配置,窗口的建立等<br>其简单的易懂的代码语法设计可以说是对入门新手的福音</p><p><img src="/2019/05/24/c/sfmmmm.png" alt=""></p><a id="more"></a><p>其实对于环境的配置，官网上的说明已经很明白了</p><p><a href="https://www.sfml-dev.org/download/sfml/2.5.1/" target="_blank" rel="noopener">官网链接</a></p><p>就算官网需要翻墙，还用很多国内大佬的解释也很清楚</p><p><a href="https://www.cnblogs.com/flowingwind/p/8284579.html" target="_blank" rel="noopener">VS2017编译SFML SDK配制环境详解</a></p><p>所以我这里就补充几条常见的问题吧</p><p>首先，你会看到如果你下载SFML的与你的Visual C ++版本是对应的（一般都是对应的）<br>你可以完全忽略介绍中对于”自己构建SFML“的教程<br>因为那对于初学者确实有点困难</p><p>第二点，建议使用×64的版本<br>这点我想我就不用多说了<br>64位基本完全兼容32位<br>可以避免很多不必要的麻烦</p><p>第三点，关于初始的大绿球的代码<br>  <pre><code> #include &lt;SFML/Graphics.hpp&gt;   //不解释，目前只需要包含图像部分就行了。<br>               int main()                                 </code></pre></p><pre><code>{ sf::RenderWindow window(sf::VideoMode(800, 600), &quot;SFML Application&quot;);     //对新建窗口的封装，第一个参数是一个VideoMode，表示窗口大小，第二个表示窗口标题 sf::CircleShape shape;                                                    //目前的物体，一个圆，暂时把他当成精灵就行了。 shape.setPosition(400, 300); shape.setRadius(40.0f); shape.setFillColor(sf::Color::Cyan); while (window.isOpen()){                                                  //不断执行这个循环 sf::Event event; while (window.pollEvent(event)){                                      //sfml中的事件，每次读取窗口的事件。 if (event.type == sf::Event::Closed)                              //关闭事件，也就是按了窗口上的叉叉  window.close(); if (event.type == sf::Event::KeyPressed){                         //按键事件 if (event.key.code == sf::Keyboard::Escape)                   //如果按了esc，也是关闭的效果  window.close(); }//end if }//end while window.clear();                                                       //每次清屏 window.draw(shape);                                                   //东西还是要画的 window.display();                                                     //画完之后还是要显示的 }                                                                    //end while return 0; }</code></pre><p><br>记得一定要把bin文件夹的dll文件放到exe文件的根目录里哟，我一般都放上（指不定用上哪个）</p><p>最后再说一个我最近碰到的小问题<br>在引用声效时<br>Failed to open sound file “resources/1.wav” (couldn’t open stream)<br>这是在VS里编译的时候DOS窗口出现的提示<br>不要慌，只是在VS里调试时候才会出现<br>直接从外部打开EXE文件就不会出现此提示了<br>个人认为是VS的访问权限及安全保护问题引发的</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=526646591&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;好久没更新了&lt;br&gt;前一段时间在学sfml图形库（c++）的使用&lt;br&gt;包括环境的配置,窗口的建立等&lt;br&gt;其简单的易懂的代码语法设计可以说是对入门新手的福音&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/05/24/c/sfmmmm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>腾讯QQ历年新春活动回顾</title>
    <link href="http://wbqzsl.github.io/2019/01/28/xiaonian/"/>
    <id>http://wbqzsl.github.io/2019/01/28/xiaonian/</id>
    <published>2019-01-28T13:13:27.000Z</published>
    <updated>2019-05-24T14:23:10.372Z</updated>
    
    <content type="html"><![CDATA[<p>今天是传统的小年，意味着新年即将开始。今天，腾讯QQ正式推出了福袋活动，同时也将三款新春小游戏作为活动的一部分发布了出来。</p><p>  此活动将从小年夜（1月28日）持续到大年初三（2月7日）。期间，用户打开手机QQ，即可进入相关活动。进入活动之后，用户可以获得“福袋”，将福袋分享给亲朋好友之后，可以解锁现金红包或者卡券宝箱。<br><a id="more"></a><br>  上面是官方发布的游戏方法<br>  <img src="/2019/01/28/xiaonian/1.png" alt=""><br>  <img src="/2019/01/28/xiaonian/2.png" alt=""><br>  <img src="/2019/01/28/xiaonian/3.png" alt=""><br>  我们来回想一下前几年腾讯QQ发布的新年活动<br>  2015，2016：虚拟“红包”展露头角。基于微信与手Q两大社交平台，腾讯整合联动旗下全平台资源，包括腾讯新闻、腾讯游戏、腾讯开放平台、理财通、QQ浏览器等，实现全覆盖。这两年，用户使用的是下拉消息框来实现“抢”红包。</p><p>  2017：LBS+AR天降红包 2016是虚拟现实元年，而LBS位置服务在2016年也在国外闪亮登场（如精灵宝可梦）。这两者结合后，在当年引起了不小的关注</p><p>  2018：“走运”红包 过年期间从除夕到初三每走100步可以抽取一个红包，每天最多可以抽取100次，10000步封顶。这其实是通过更健康的过年方式带动运动量的提高，同时也可得红包。（幸亏是100步（滑稽））</p><p>  总体来看，腾讯QQ新春活动往往与当年腾讯的工作重点是联系的。那么今年的通过游戏与社交来获得红包的方式，是不是也意味着今年腾讯会把更多的精力投入到游戏，尤其是社交游戏上来。</p><p>  而值得注意的是，今年腾讯推出的三款小游戏，质量十分高，面向对象主要是年轻人。那么通过年轻人的消费水平来看，腾讯以后可能会推出一些玩法非常“公平”，注重竞争与社交的游戏。也就是说不会在游戏平衡上让玩家“氪金”，而更多的通过一些张扬个性（如皮肤）的方面让玩家“充钱”。（不要老说腾讯黑心，一个企业如果不想着怎么盈利，那倒闭算了）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是传统的小年，意味着新年即将开始。今天，腾讯QQ正式推出了福袋活动，同时也将三款新春小游戏作为活动的一部分发布了出来。&lt;/p&gt;
&lt;p&gt;  此活动将从小年夜（1月28日）持续到大年初三（2月7日）。期间，用户打开手机QQ，即可进入相关活动。进入活动之后，用户可以获得“福袋”，将福袋分享给亲朋好友之后，可以解锁现金红包或者卡券宝箱。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Newyear" scheme="http://wbqzsl.github.io/tags/Newyear/"/>
    
  </entry>
  
  <entry>
    <title>bug大清理，第二次更新</title>
    <link href="http://wbqzsl.github.io/2019/01/07/bug-clean/"/>
    <id>http://wbqzsl.github.io/2019/01/07/bug-clean/</id>
    <published>2019-01-07T11:33:33.000Z</published>
    <updated>2019-05-24T14:22:51.665Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=496869422&auto=0&height=66"></iframe><br>经过了一天的测试，发现了不少的bug<br>评论被吃，加载出错…<br>有些是因为兼容性的原因，有些是因为云没有弄好<br>这次，小伙伴们被吃掉的评论可以看到了！<br><a id="more"></a></p><p>我也又加了许多功能（￣︶￣）↗　</p><p>1.实现fork me on github<br>2.实现点击出现桃心效果<br>3.侧边栏社交小图标<br>4.主页文章添加阴影效果<br>5.在网站底部加上访问量(不同于文章访问量)<br>6.添加“DaoVoice 在线联系“在右下角（测试，你可以联系我让我知道这个东西工不工作）<br>7.为博客加上萌萌的看板娘（欢迎调戏）<br>8.打赏功能（测试）<br>9.添加背景</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=496869422&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;经过了一天的测试，发现了不少的bug&lt;br&gt;评论被吃，加载出错…&lt;br&gt;有些是因为兼容性的原因，有些是因为云没有弄好&lt;br&gt;这次，小伙伴们被吃掉的评论可以看到了！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="你好" scheme="http://wbqzsl.github.io/tags/%E4%BD%A0%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>第一次更新完成</title>
    <link href="http://wbqzsl.github.io/2019/01/06/My-blog-2-0/"/>
    <id>http://wbqzsl.github.io/2019/01/06/My-blog-2-0/</id>
    <published>2019-01-06T13:27:34.000Z</published>
    <updated>2019-01-07T11:31:33.587Z</updated>
    
    <content type="html"><![CDATA[<p>又捣鼓了一天，终于，把评论功能弄起来了。（此处应有掌声）<br>评论功能由无后台的Valine评论系统与leancloud云共同完成<br>还顺带装上了网易云的音乐插件和访客统计功能<br>换了个更简洁的主题<br>欢迎吐槽，收藏（话说我是不是该搞个点赞功能）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又捣鼓了一天，终于，把评论功能弄起来了。（此处应有掌声）&lt;br&gt;评论功能由无后台的Valine评论系统与leancloud云共同完成&lt;br&gt;还顺带装上了网易云的音乐插件和访客统计功能&lt;br&gt;换了个更简洁的主题&lt;br&gt;欢迎吐槽，收藏（话说我是不是该搞个点赞功能）&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="你好" scheme="http://wbqzsl.github.io/tags/%E4%BD%A0%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>world</title>
    <link href="http://wbqzsl.github.io/2019/01/05/world/"/>
    <id>http://wbqzsl.github.io/2019/01/05/world/</id>
    <published>2019-01-05T11:20:58.000Z</published>
    <updated>2019-01-05T12:09:12.998Z</updated>
    
    <content type="html"><![CDATA[<p> 欢迎你访问我的博客<br> 忙了一整天，终于把这个博客整出来了（感谢SomeQ的指导）<br> 这个博客是通过hexo框架部署在GitHub上的，以后将会实现更多功能。<br> 也算是在互联网有了真正属于自己的一个小天地吧（￣︶￣）↗　<br> 希望大家以后常来看看；我将在这里更新很多有趣的事情的<br> 主要是围绕着游戏开发的一些想法和游戏开发日志什么的<br> Hello World！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 欢迎你访问我的博客&lt;br&gt; 忙了一整天，终于把这个博客整出来了（感谢SomeQ的指导）&lt;br&gt; 这个博客是通过hexo框架部署在GitHub上的，以后将会实现更多功能。&lt;br&gt; 也算是在互联网有了真正属于自己的一个小天地吧（￣︶￣）↗　&lt;br&gt; 希望大家以后常来看看；我将
      
    
    </summary>
    
    
      <category term="你好" scheme="http://wbqzsl.github.io/tags/%E4%BD%A0%E5%A5%BD/"/>
    
  </entry>
  
</feed>
