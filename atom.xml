<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wbq&#39;s Blog</title>
  
  <subtitle>Hello World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://49.234.121.116/"/>
  <updated>2020-05-17T12:46:20.950Z</updated>
  <id>http://49.234.121.116/</id>
  
  <author>
    <name>wbq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDBC中Statement注入攻击原理分析及如何避免</title>
    <link href="http://49.234.121.116/2020/05/17/study2020517/"/>
    <id>http://49.234.121.116/2020/05/17/study2020517/</id>
    <published>2020-05-17T09:55:19.000Z</published>
    <updated>2020-05-17T12:46:20.950Z</updated>
    
    <content type="html"><![CDATA[<p>所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。比如先前的很多影视网站泄露VIP会员密码大多就是通过WEB表单递交查询字符暴出的，这类表单特别容易受到SQL注入式攻击．</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=405253317&auto=1&height=66"></iframe><h1 id="Statement类"><a href="#Statement类" class="headerlink" title="Statement类"></a>Statement类</h1><p>我们知道。JDBC中Statement类用于将SQL语句编译并提交到数据库中。原因就出在这个类的执行机制中</p><h1 id="情景模拟"><a href="#情景模拟" class="headerlink" title="情景模拟"></a>情景模拟</h1><p>这里用键盘输入的形式简单模拟了该种攻击的场景</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.*;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> demo4</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) throws ClassNotFoundException, SQLException &#123;</span><br><span class="line">       <span class="comment">/* Class.forName("com.mysql.jdbc.Driver");//注册驱动</span></span><br><span class="line"><span class="comment">        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/study1128","root","wbqzsl");//获取链接对象*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//mysql8.0驱动新特性</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">"com.mysql.cj.jdbc.Driver"</span>)</span>;<span class="comment">//注册驱动</span></span><br><span class="line">        Connection conn = <span class="module-access"><span class="module"><span class="identifier">DriverManager</span>.</span></span>get<span class="constructor">Connection(<span class="string">"jdbc:mysql://127.0.0.1:3306/study517?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8&amp;useSSL=false"</span>,<span class="string">"root"</span>,<span class="string">"wbqzsl"</span>)</span>;<span class="comment">//返回一个connection对象</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(conn);</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> <span class="constructor">Scanner(System.<span class="params">in</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"请输入用户名："</span>);</span><br><span class="line">        String name = scanner.next<span class="constructor">Line()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"请输入密码"</span>);</span><br><span class="line">        String passwd = scanner.next<span class="constructor">Line()</span>;</span><br><span class="line">        String sql = <span class="string">"select count(*) from student where uname='"</span>+name+<span class="string">"'and upasswd='"</span>+passwd+<span class="string">"' "</span>;</span><br><span class="line">        Statement stmt = conn.create<span class="constructor">Statement()</span>;<span class="comment">//不安全</span></span><br><span class="line">        ResultSet rs  = stmt.execute<span class="constructor">Query(<span class="params">sql</span>)</span>;</span><br><span class="line">        <span class="built_in">int</span> flag =-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(rs.next<span class="literal">()</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           flag =  rs.get<span class="constructor">Int(1)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// PreparedStatement pstmt = conn.prepareStatement("");</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这之前，我已经在本机的mysql://127.0.0.1:3306/study517这一数据库中建立了如下的student表</p><p><img src="/2020/05/17/study2020517/517.png" alt=""></p><p>我们先模拟正常登录</p><p>当用户名和密码都对时<br><img src="/2020/05/17/study2020517/5172.png" alt=""></p><p>当输错密码时<br><img src="/2020/05/17/study2020517/5173.png" alt=""></p><p>可以看到，这时候业务逻辑是正常的</p><p><strong>但!当我们输入以下的用户名和密码的时候</strong></p><p><img src="/2020/05/17/study2020517/5174.png" alt=""></p><p><img src="/2020/05/17/study2020517/5175.png" alt=""></p><p><img src="/2020/05/17/study2020517/1.jpg" alt=""></p><p><strong>喜当爹</strong></p><p>这是为什么呢？</p><h1 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h1><p>原因就在这个statement类的执行机制上了</p><p>我们程序的语句加上占位符是这样的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student <span class="keyword">where</span> uname=<span class="string">'"+name+"'</span><span class="keyword">and</span> upasswd=<span class="string">'"+passwd+"'</span> <span class="string">"</span></span><br></pre></td></tr></table></figure><p>当我们把name输成<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是你爸爸 ' <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="comment">-- </span></span><br></pre></td></tr></table></figure></p><p>这个语句就变成了<br><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"select count(*) from student where uname='</span><span class="string">"+我是你爸爸 '</span> <span class="built_in">or</span> <span class="number">1</span>=<span class="number">1</span> -- +<span class="string">"'</span><span class="built_in">and</span> upasswd=<span class="string">'"</span>+passwd+<span class="string">"'</span> <span class="string">"</span></span><br></pre></td></tr></table></figure></p><p>这时候，语句后面的where条件就变成查找uname=‘“+我是你爸爸’<strong>or</strong> 1=1</p><p>虽然uname=‘“+我是你爸爸’找不到，<strong>但是1=1是永真的！</strong></p><p>并且“– ”把后面的条件全部注释掉</p><p>这时候，SQL语句一定能查到东西</p><p>所以<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> flag =-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(rs.next<span class="literal">()</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           flag =  rs.get<span class="constructor">Int(1)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录失败"</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>也就是flag一定会变为1</p><p>也就是不需要用密码和用户名就可以登陆成功！</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>使用preparestatement类</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.*;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> demo4</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) throws ClassNotFoundException, SQLException &#123;</span><br><span class="line">       <span class="comment">/* Class.forName("com.mysql.jdbc.Driver");//注册驱动</span></span><br><span class="line"><span class="comment">        Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/study1128","root","wbqzsl");//获取链接对象*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//mysql8.0驱动新特性</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">"com.mysql.cj.jdbc.Driver"</span>)</span>;<span class="comment">//注册驱动</span></span><br><span class="line">        Connection conn = <span class="module-access"><span class="module"><span class="identifier">DriverManager</span>.</span></span>get<span class="constructor">Connection(<span class="string">"jdbc:mysql://127.0.0.1:3306/study517?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8&amp;useSSL=false"</span>,<span class="string">"root"</span>,<span class="string">"wbqzsl"</span>)</span>;<span class="comment">//返回一个connection对象</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(conn);</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> <span class="constructor">Scanner(System.<span class="params">in</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"请输入用户名："</span>);</span><br><span class="line">        String name = scanner.next<span class="constructor">Line()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"请输入密码"</span>);</span><br><span class="line">        String passwd = scanner.next<span class="constructor">Line()</span>;</span><br><span class="line">        <span class="comment">/*String sql = "select count(*) from student where uname='"+name+"'and upasswd='"+passwd+"' ";</span></span><br><span class="line"><span class="comment">        Statement stmt = conn.createStatement();//不安全*/</span></span><br><span class="line">        PreparedStatement pstmt = conn.prepare<span class="constructor">Statement(<span class="string">"select count(*) from student where uname= ? and upasswd= ? "</span>)</span>;<span class="comment">//预编译</span></span><br><span class="line">        pstmt.set<span class="constructor">String(1,<span class="string">"name"</span>)</span>;</span><br><span class="line">        pstmt.set<span class="constructor">String(2,<span class="string">"passwd"</span>)</span>;</span><br><span class="line">        ResultSet rs  = pstmt.execute<span class="constructor">Query()</span>;</span><br><span class="line">        <span class="built_in">int</span> flag =-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(rs.next<span class="literal">()</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           flag =  rs.get<span class="constructor">Int(1)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"登录失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/05/17/study2020517/5176.png" alt=""></p><p>preparestatement类特有的的预编译SQL语句和独特的占位符，可以有效防范此类攻击</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。比如先前的很多影视网站泄露VIP会员密码大多就是通过WEB表单递交查询字符暴出的，这类表单特别容易受到SQL注入式攻击．&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://49.234.121.116/categories/Java/"/>
    
    
      <category term="Java" scheme="http://49.234.121.116/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Jsp实现登录态失效，记住用户名，注销</title>
    <link href="http://49.234.121.116/2020/05/15/study2020515/"/>
    <id>http://49.234.121.116/2020/05/15/study2020515/</id>
    <published>2020-05-15T10:38:23.000Z</published>
    <updated>2020-05-17T09:53:34.282Z</updated>
    
    <content type="html"><![CDATA[<p>在浏览网页时的记住用户名，登录态失效，注销等功能。其实实现原理很简单，就是Cookie与session的应用。</p><a id="more"></a><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1440197497&auto=1&height=66"></iframe></p><h1 id="session对象和Cookie"><a href="#session对象和Cookie" class="headerlink" title="session对象和Cookie"></a>session对象和Cookie</h1><p>在客户端向服务端发送请求时，服务端会自动产生一个session对象，和客户端唯一对应。并生成一对sessionid和jsessionid，其中jsessionid作为cookie发送到客户端保存以用于配对。</p><h1 id="记住用户名，和登录态失效的原理"><a href="#记住用户名，和登录态失效的原理" class="headerlink" title="记住用户名，和登录态失效的原理"></a>记住用户名，和登录态失效的原理</h1><p>cookie里会存有用户名的相关信息，我们只需在客户端访问时进行遍历和筛选就可以实现<br>而session中有一个void setMaxInactiveInterval（int i）方法，对session对象进行有效时间设置。用if进行判断就可实现登录失效这一功能。</p><h1 id="注销"><a href="#注销" class="headerlink" title="注销"></a>注销</h1><p>只需要调用session.invalidate()，即注销</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h2><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'login.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"styles.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="vbscript">&lt;%! <span class="built_in">String</span> uname; %&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  </span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript">  Cookie[] cookies = <span class="built_in">request</span>.getCookies();</span></span><br><span class="line"><span class="vbscript">  <span class="keyword">for</span>(Cookie c :cookies)</span></span><br><span class="line"><span class="vbscript">  &#123;</span></span><br><span class="line"><span class="vbscript">  <span class="keyword">if</span>(c.getName().equals(<span class="string">"uname"</span>))</span></span><br><span class="line"><span class="vbscript">  &#123;</span></span><br><span class="line"><span class="vbscript">  uname = c.getValue();</span></span><br><span class="line"><span class="vbscript">  &#125;</span></span><br><span class="line"><span class="vbscript">  &#125;</span></span><br><span class="line"><span class="vbscript">   %&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/study/response/dologin.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    用户名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> =<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"uname"</span> <span class="attr">value</span> = <span class="string">"</span></span></span><span class="vbscript">&lt;%= uname == <span class="literal">null</span>?<span class="string">""</span>:uname%&gt;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span> = <span class="string">"upasswd"</span> &gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="dologin-jsp"><a href="#dologin-jsp" class="headerlink" title="dologin.jsp"></a>dologin.jsp</h2><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'dologin.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"styles.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript">   <span class="built_in">String</span> uname =  <span class="built_in">request</span>.getParameter(<span class="string">"uname"</span>);</span></span><br><span class="line"><span class="vbscript">   <span class="built_in">String</span> upasswd = <span class="built_in">request</span>.getParameter(<span class="string">"upasswd"</span>);</span></span><br><span class="line"><span class="vbscript">   <span class="keyword">if</span>(uname.equals(<span class="string">"wbq"</span>)&amp;&amp;upasswd.equals(<span class="string">"123"</span>))</span></span><br><span class="line"><span class="vbscript">   &#123;</span></span><br><span class="line"><span class="vbscript">   //<span class="built_in">response</span>.sendRedirect(<span class="string">"/study/response/welcome.jsp"</span>);</span></span><br><span class="line"><span class="vbscript">   session.setAttribute(<span class="string">"upasswd"</span>,upasswd);//此处注意，若在登陆后继续在地址栏访问dologin.jsp，则会报错。原因，<span class="built_in">request</span>只在同一次请求有效。</span></span><br><span class="line"><span class="vbscript">   session.setAttribute(<span class="string">"uname"</span>,uname);</span></span><br><span class="line"><span class="vbscript">   <span class="built_in">request</span>.getRequestDispatcher(<span class="string">"welcome.jsp"</span>).forward(<span class="built_in">request</span>,<span class="built_in">response</span>);//请求转发,在服务器内部</span></span><br><span class="line"><span class="vbscript">     session.setMaxInactiveInterval(<span class="number">10</span>);</span></span><br><span class="line"><span class="vbscript">   </span></span><br><span class="line"><span class="vbscript">   &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="vbscript">   out.print(<span class="string">"登陆失败"</span>);</span></span><br><span class="line"><span class="vbscript">   <span class="built_in">response</span>.sendRedirect(<span class="string">"login.jsp"</span>);//重定向</span></span><br><span class="line"><span class="vbscript">   </span></span><br><span class="line"><span class="vbscript">   &#125;</span></span><br><span class="line"><span class="vbscript">   %&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="welcome-jsp"><a href="#welcome-jsp" class="headerlink" title="welcome.jsp"></a>welcome.jsp</h2><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'welcome.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"styles.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    登录成功！欢迎 ：</span></span><br><span class="line"><span class="xml">    </span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript">      <span class="built_in">String</span> name = (<span class="built_in">String</span>)session.getAttribute(<span class="string">"uname"</span>);//Object类型强转  </span></span><br><span class="line"><span class="vbscript">    // <span class="built_in">String</span> name = <span class="built_in">request</span>.getParameter(<span class="string">"uname"</span>);</span></span><br><span class="line"><span class="vbscript">    <span class="keyword">if</span>(name == <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">    &#123;</span></span><br><span class="line"><span class="vbscript">    //<span class="built_in">request</span>.getRequestDispatcher(<span class="string">"login.jsp"</span>).forward(<span class="built_in">request</span>,<span class="built_in">response</span>);//转发不会在地址栏出现</span></span><br><span class="line"><span class="vbscript">    <span class="built_in">response</span>.sendRedirect(<span class="string">"login.jsp"</span>);</span></span><br><span class="line"><span class="vbscript">    &#125;</span></span><br><span class="line"><span class="vbscript">     out.print(name);</span></span><br><span class="line"><span class="vbscript"> </span></span><br><span class="line"><span class="vbscript"></span></span><br><span class="line"><span class="vbscript">     %&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="zhuxiao-jsp"><a href="#zhuxiao-jsp" class="headerlink" title="zhuxiao.jsp"></a>zhuxiao.jsp</h2><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'zhuxiao.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"styles.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript">    session.invalidate();//注销登录</span></span><br><span class="line"><span class="vbscript">   // session.removeAttribute(<span class="string">"uname"</span>);</span></span><br><span class="line"><span class="vbscript">   <span class="built_in">response</span>.sendRedirect(<span class="string">"login.jsp"</span>);</span></span><br><span class="line"><span class="vbscript">     %&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在浏览网页时的记住用户名，登录态失效，注销等功能。其实实现原理很简单，就是Cookie与session的应用。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://49.234.121.116/categories/Java/"/>
    
    
      <category term="Java" scheme="http://49.234.121.116/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中I/O流的学习</title>
    <link href="http://49.234.121.116/2020/05/14/study2020514/"/>
    <id>http://49.234.121.116/2020/05/14/study2020514/</id>
    <published>2020-05-14T06:57:03.000Z</published>
    <updated>2020-05-15T03:39:12.857Z</updated>
    
    <content type="html"><![CDATA[<p>越发感觉到Java的可移植性强了</p><p>I/O 即 Input Output</p><p>我的大创项目过了，好好努力吧。路还很长，但时间很少</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=2066652649&auto=1&height=66"></iframe><h1 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.io.FileInputStream;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.io.FileNotFoundException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.io.FileOutputStream;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.io.IOException;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args)  &#123;</span><br><span class="line">        FileInputStream fis = <span class="literal">null</span>;</span><br><span class="line">        FileOutputStream fos = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(<span class="string">"D://wbq.txt"</span>);</span><br><span class="line">            fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"D://work/Java/IOStream/test.txt"</span>);</span><br><span class="line">            int a;</span><br><span class="line">            <span class="keyword">while</span>((a = fis.read()) != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">    System.out.print((char)a);</span><br><span class="line">                fos.write(a);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span><span class="comment">//确保资源被释放</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (fis != <span class="literal">null</span>)<span class="comment">//防止空指针</span></span><br><span class="line">                fis.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(fos != <span class="literal">null</span>)</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果如下<br>(中文出现乱码)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">abcdefg</span><br><span class="line">å¨æ°ä¼¦</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文件内容<br> <img src="/2020/05/14/study2020514/5146.png" alt=""></p><h2 id="使用缓冲区进行文件拷贝"><a href="#使用缓冲区进行文件拷贝" class="headerlink" title="使用缓冲区进行文件拷贝"></a>使用缓冲区进行文件拷贝</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class testByte</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) throws IOException &#123;</span><br><span class="line">        <span class="keyword">long</span> time1 = System.currentTimeMillis();</span><br><span class="line">        FileInputStream fis  = <span class="keyword">new</span> FileInputStream(<span class="string">"D://Baacloud.rar"</span>);</span><br><span class="line">        <span class="comment">//FileInputStream fis  = new FileInputStream("D://wbq.txt");</span></span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"D://work/Java//IOStream/1.rar"</span>);</span><br><span class="line">        BufferedInputStream bfis = <span class="keyword">new</span> BufferedInputStream(fis);</span><br><span class="line">        BufferedOutputStream bfos = <span class="keyword">new</span> BufferedOutputStream(fos);</span><br><span class="line">        <span class="keyword">byte</span>[] car = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];<span class="comment">//缓冲区，可以想象为货车</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">while</span> ( (i = fis.<span class="built_in">read</span>(car))!=<span class="number">-1</span>) &#123;</span><br><span class="line">            fos.<span class="built_in">write</span>(car);</span><br><span class="line">        &#125;</span><br><span class="line">        fos.<span class="built_in">close</span>();</span><br><span class="line">        fis.<span class="built_in">close</span>();</span><br><span class="line">        <span class="keyword">long</span> time2 = System.currentTimeMillis();</span><br><span class="line">        System.out.<span class="built_in">println</span>(time2-time1+<span class="string">"ms"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果如下，6,831,970 字节的文件很快就考完<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">52</span>ms</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>文件内容<br> <img src="/2020/05/14/study2020514/5147.png" alt=""></p><h1 id="字符流与转换流"><a href="#字符流与转换流" class="headerlink" title="字符流与转换流"></a>字符流与转换流</h1><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">zifuStream</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) throws IOException &#123;</span><br><span class="line">        FileReader fir = <span class="keyword">new</span> <span class="type">FileReader</span>(<span class="string">"D://wbq.txt"</span>);</span><br><span class="line">        FileWriter fwr = <span class="keyword">new</span> <span class="type">FileWriter</span>(<span class="string">"D://wbqcopy.txt"</span>);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> <span class="type">FileOutputStream</span>(<span class="string">"D://copy001.txt"</span>);</span><br><span class="line">        FileInputStream <span class="keyword">in</span> = <span class="keyword">new</span> <span class="type">FileInputStream</span>(<span class="string">"D://wbq.txt"</span>);</span><br><span class="line">        <span class="comment">/*作用</span></span><br><span class="line"><span class="comment">        处理中文乱码</span></span><br><span class="line"><span class="comment">        如何解决？</span></span><br><span class="line"><span class="comment">        实际上通过字节流加编码表的形式</span></span><br><span class="line"><span class="comment">        判断是否为中文，若是，读取2个（GBK）或3个字节（UTF-8），然后按照默认编码表进行读取</span></span><br><span class="line"><span class="comment">        如何判断？</span></span><br><span class="line"><span class="comment">        中文一般为负值</span></span><br><span class="line"><span class="comment">        部分中文首个为负值，后部分为正值</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        int i;</span><br><span class="line">        <span class="comment">//字符流文件拷贝只能操作纯文本文件</span></span><br><span class="line">        <span class="keyword">while</span> ((i=fir.read())!=<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fwr.write(i);</span><br><span class="line">        &#125;</span><br><span class="line">        fwr.flush();</span><br><span class="line">        fwr.write(<span class="string">"王伯琪"</span>);<span class="comment">//writer的write方法可以使用String类型传输</span></span><br><span class="line">        fwr.flush();<span class="comment">//close 和 flush 都可以将字符从缓冲区写入文件，但不加不可以</span></span><br><span class="line">        fwr.close();</span><br><span class="line">        <span class="comment">//fir.close();</span></span><br><span class="line">        fos.close();</span><br><span class="line">        BufferedReader brd = <span class="keyword">new</span> <span class="type">BufferedReader</span>(fir);</span><br><span class="line">        BufferedWriter bufferedWriter = <span class="keyword">new</span> <span class="type">BufferedWriter</span>(fwr);</span><br><span class="line">        <span class="keyword">String</span> line =  brd.readLine();<span class="comment">//一次读一行，末尾返回null</span></span><br><span class="line">        bufferedWriter.<span class="keyword">new</span><span class="type">Line</span>();<span class="comment">//向文件写入换行，具有跨平台性//Buuffedreader 特有</span></span><br><span class="line">        <span class="comment">//将字节流通过指定字符集转换为字符流</span></span><br><span class="line">        InputStreamReader inputStreamReader = <span class="keyword">new</span> <span class="type">InputStreamReader</span>(<span class="keyword">in</span>,<span class="string">"UTF-8"</span>);</span><br><span class="line">        BufferedReader br2 =<span class="keyword">new</span> <span class="type">BufferedReader</span>(inputStreamReader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果如下<br>（中文未乱码）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">abcdefg</span><br><span class="line">周杰伦</span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="文件类"><a href="#文件类" class="headerlink" title="文件类"></a>文件类</h1><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">import java.io.File;</span><br><span class="line">import java.io.FilenameFilter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> demo &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) throws IOException &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> <span class="constructor">File(<span class="string">"D://wbq.txt"</span>)</span>;</span><br><span class="line">        <span class="comment">//读写相关</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.exists<span class="literal">()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.can<span class="constructor">Read()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.can<span class="constructor">Write()</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建删除相关</span></span><br><span class="line">        <span class="comment">//file.delete();</span></span><br><span class="line">        <span class="comment">//file.createNewFile();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//is一系列</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.is<span class="constructor">File()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.is<span class="constructor">Directory()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.is<span class="constructor">Absolute()</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//get一系列</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">Name()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">Path()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">AbsolutePath()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">CanonicalPath()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">Parent()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">ParentFile()</span>);</span><br><span class="line"></span><br><span class="line">        long time = file.last<span class="constructor">Modified()</span>;<span class="comment">//最后修改时间</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="keyword">new</span> <span class="constructor">Date(<span class="params">time</span>)</span>);</span><br><span class="line"></span><br><span class="line">        long lenth = file.length<span class="literal">()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(lenth);</span><br><span class="line"></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"------------------------------------"</span>);</span><br><span class="line">        <span class="comment">//获取文件夹中文件列表的三种方式</span></span><br><span class="line">        File DirectoryFile =<span class="keyword">new</span> <span class="constructor">File(<span class="string">"D://QQBrowser"</span>)</span>;</span><br><span class="line">        <span class="comment">//method1</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="module-access"><span class="module"><span class="identifier">DirectoryFile</span>.</span></span>is<span class="constructor">Directory()</span>) &#123;<span class="comment">//最好加入判断，防止空指针</span></span><br><span class="line">            String<span class="literal">[]</span> <span class="built_in">list</span> = <span class="module-access"><span class="module"><span class="identifier">DirectoryFile</span>.</span></span><span class="built_in">list</span><span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">            for (String x : <span class="built_in">list</span>) &#123;</span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"------------------------------------"</span>);</span><br><span class="line">        <span class="comment">//method2</span></span><br><span class="line">        String<span class="literal">[]</span> chooselist =<span class="module-access"><span class="module"><span class="identifier">DirectoryFile</span>.</span></span><span class="built_in">list</span>(<span class="keyword">new</span> <span class="constructor">FilenameFilter()</span> &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public boolean accept(File file, String s) &#123;</span><br><span class="line">                File ff = <span class="keyword">new</span> <span class="constructor">File(<span class="params">file</span>,<span class="params">s</span>)</span>;</span><br><span class="line">                return ff.get<span class="constructor">Name()</span>.ends<span class="constructor">With(<span class="string">"dll"</span>)</span>;</span><br><span class="line">                <span class="comment">//return ff.isFile();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        for (String x :chooselist)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"------------------------------------"</span>);</span><br><span class="line">        <span class="comment">//method3，最灵活</span></span><br><span class="line"></span><br><span class="line">        File<span class="literal">[]</span> files = <span class="module-access"><span class="module"><span class="identifier">DirectoryFile</span>.</span></span><span class="built_in">list</span><span class="constructor">Files()</span>;</span><br><span class="line">        for (File f :files)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(f.get<span class="constructor">Name()</span>.ends<span class="constructor">With(<span class="string">"ico"</span>)</span>)</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(f.<span class="keyword">to</span><span class="constructor">String()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"------------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">        File test =<span class="keyword">new</span> <span class="constructor">File(<span class="string">"D://test"</span>)</span>;</span><br><span class="line">        printfiles(test);<span class="comment">//递归显示文件夹内的所有内容，包括子文件夹内部</span></span><br><span class="line">    &#125;</span><br><span class="line">    static void printfiles(File x) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x.is<span class="constructor">Directory()</span>) &#123;</span><br><span class="line">            File<span class="literal">[]</span> files = x.<span class="built_in">list</span><span class="constructor">Files()</span>;</span><br><span class="line">            for (File file : files) &#123;</span><br><span class="line">                <span class="keyword">if</span> (file.is<span class="constructor">File()</span>) &#123;</span><br><span class="line">                    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(file.get<span class="constructor">Name()</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file.<span class="built_in">list</span><span class="constructor">Files()</span> != null)</span><br><span class="line">                        printfiles(file);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"D:\IntelliJ IDEA\IntelliJ IDEA 2019.2\jbr\bin\java.exe"</span> <span class="string">"-javaagent:D:\IntelliJ IDEA\IntelliJ IDEA 2019.2\lib\idea_rt.jar=56106:D:\IntelliJ IDEA\IntelliJ IDEA 2019.2\bin"</span> -Dfile.encoding=UTF-<span class="number">8</span> -classpath D:\work\.idea\production\FileClass demo</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">true</span><br><span class="line">wbq.txt</span><br><span class="line">D:\wbq.txt</span><br><span class="line">D:\wbq.txt</span><br><span class="line">D:\wbq.txt</span><br><span class="line">D:\</span><br><span class="line">D:\</span><br><span class="line">Tue May <span class="number">12</span> <span class="number">20</span>:<span class="number">18</span>:<span class="number">25</span> CST <span class="number">2020</span></span><br><span class="line"><span class="number">18</span></span><br><span class="line">------------------------------------</span><br><span class="line"><span class="number">10.5</span>.<span class="number">3863.400</span></span><br><span class="line"><span class="number">10.5</span>.<span class="number">4039.400</span></span><br><span class="line">app.ico</span><br><span class="line">BugReport.exe</span><br><span class="line">driver</span><br><span class="line">gamesp</span><br><span class="line">navi.ico</span><br><span class="line">navi2.ico</span><br><span class="line">plugin</span><br><span class="line">PrScrnNew.dll</span><br><span class="line">QBUtils.dll</span><br><span class="line">QQBrowser.exe</span><br><span class="line">TsService.exe</span><br><span class="line">uninst.exe</span><br><span class="line">------------------------------------</span><br><span class="line">PrScrnNew.dll</span><br><span class="line">QBUtils.dll</span><br><span class="line">------------------------------------</span><br><span class="line">D:\QQBrowser\app.ico</span><br><span class="line">D:\QQBrowser\navi.ico</span><br><span class="line">D:\QQBrowser\navi2.ico</span><br><span class="line">------------------------------------</span><br><span class="line">QQ截图<span class="number">20200423163812</span>.png</span><br><span class="line">QQ截图<span class="number">20200423164024</span>.png</span><br><span class="line">QQ截图<span class="number">20200427163021</span>.png</span><br><span class="line">QQ截图<span class="number">20200429112450</span>.png</span><br><span class="line">QQ截图<span class="number">20200509170025</span>.png</span><br><span class="line">新建 DOCX 文档.docx</span><br><span class="line">新建 XLS 工作表.xls</span><br><span class="line"></span><br><span class="line">Process finished with exit <span class="selector-tag">code</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>涉及到的文件及文件夹截图<br> <img src="/2020/05/14/study2020514/java514.png" alt=""><br>  <img src="/2020/05/14/study2020514/java5142.png" alt=""><br>    <img src="/2020/05/14/study2020514/java5143.png" alt=""><br>     <img src="/2020/05/14/study2020514/5145.png" alt=""></p><h2 id="递归删除文件夹内所有内容"><a href="#递归删除文件夹内所有内容" class="headerlink" title="递归删除文件夹内所有内容"></a>递归删除文件夹内所有内容</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.<span class="keyword">File</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="keyword">delete</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"D://删除数据"</span>);</span><br><span class="line">        deletedir(<span class="keyword">file</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> deletedir(<span class="keyword">File</span> <span class="keyword">file</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">file</span>.isDirectory())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">File</span>[] files = <span class="keyword">file</span>.listFiles();</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">File</span> f:files)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span> (f.isDirectory())&#123;</span><br><span class="line">                   <span class="keyword">if</span> (f.listFiles()!=<span class="keyword">null</span>)</span><br><span class="line">                   deletedir(f);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> &#123;</span><br><span class="line">                   f.<span class="keyword">delete</span>();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">          <span class="keyword">file</span>.<span class="keyword">delete</span>();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.<span class="keyword">println</span>(<span class="string">"请传入文件夹,而不是文件"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="RadomAccessFile类"><a href="#RadomAccessFile类" class="headerlink" title="RadomAccessFile类"></a>RadomAccessFile类</h1><p>该类继承于io，与File类并无关系，但也能进行文件操作</p><p>模拟软件使用次数实例<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class RandomAccess</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) throws IOException &#123;</span><br><span class="line">        <span class="keyword">String</span> a = <span class="string">"D://test.txt"</span>;</span><br><span class="line">        RandomAccessFile raf  =  <span class="keyword">new</span> RandomAccessFile(<span class="string">"D://dotest.txt"</span>,<span class="string">"rw"</span>);</span><br><span class="line">        <span class="keyword">int</span> i = Integer.<span class="built_in">parseInt</span>( raf.readLine())<span class="number">-1</span>;</span><br><span class="line">        <span class="built_in">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"你的剩余次数还有 "</span>+i+<span class="string">"次"</span>);</span><br><span class="line">            raf.<span class="built_in">seek</span>(<span class="number">0</span>);<span class="comment">//因为默认追加，为防止32的发生，将指针归零</span></span><br><span class="line">            raf.<span class="built_in">write</span>((i+<span class="string">""</span>).getBytes());<span class="comment">//写入字符，默认为字节写入</span></span><br><span class="line"></span><br><span class="line">        &#125;<span class="built_in">else</span> &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"你的次数已用完"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        raf.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>D://dotest.txt文件里是一个3</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;越发感觉到Java的可移植性强了&lt;/p&gt;
&lt;p&gt;I/O 即 Input Output&lt;/p&gt;
&lt;p&gt;我的大创项目过了，好好努力吧。路还很长，但时间很少&lt;/p&gt;
    
    </summary>
    
      <category term="Java学习" scheme="http://49.234.121.116/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Java" scheme="http://49.234.121.116/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中lambda表达式的使用</title>
    <link href="http://49.234.121.116/2020/05/14/study20205142/"/>
    <id>http://49.234.121.116/2020/05/14/study20205142/</id>
    <published>2020-05-14T05:42:06.000Z</published>
    <updated>2020-05-14T07:31:36.344Z</updated>
    
    <content type="html"><![CDATA[<p>lambda表达式不光可以进行遍历。还可以利用return语句进行逻辑上的判断等等。</p><a id="more"></a><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> review &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        ArrayList&lt;String&gt; <span class="built_in">list</span> = <span class="keyword">new</span> ArrayList&lt;String&gt;<span class="literal">()</span>;</span><br><span class="line">        <span class="built_in">list</span>.add(<span class="string">"aaa"</span>);</span><br><span class="line">        <span class="built_in">list</span>.add(<span class="string">"bbb"</span>);</span><br><span class="line">        <span class="built_in">list</span>.add(<span class="string">"ccc"</span>);</span><br><span class="line">        <span class="built_in">list</span>.for<span class="constructor">Each((String <span class="params">s</span>)</span>-&gt; &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(s);</span><br><span class="line">        &#125;);<span class="comment">//完整形式</span></span><br><span class="line">        <span class="built_in">list</span>.for<span class="constructor">Each((String <span class="params">s</span>)</span> -&gt; <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(s));<span class="comment">//简化形式，与if类似，当大括号中只有一句话可省略大括号</span></span><br><span class="line">        <span class="built_in">list</span>.for<span class="constructor">Each(<span class="params">s</span>-&gt; System.<span class="params">out</span>.<span class="params">println</span>(<span class="params">s</span>)</span>);<span class="comment">//最简形式，当参数列表只有一个参数时，可省略类型声明</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>在java中，lambda表达式与函数式接口是不可分割的，都是结合起来使用的。</strong></p><p>对于函数式接口，我们可以理解为只有一个抽象方法的接口，除此之外它和别的接口相比并没有什么特殊的地方。为了确保函数式接口的正确性，我们可以给这个接口添加@FunctionalInterface注解（当然，也可以不加此注解），这样当其中有超过一个抽象方法时就会报错。</p><p>对于其他类型的接口，我们想要使用就需要定义一个类（或者使用匿名类）来实现那个接口和其中的方法，而函数式接口除了使用普通的方法来实现之外，还有一种更加简单的方法—就是使用lambda表达式。<strong>lambda表达式我们可以理解对于函数式接口和其中的抽象方法的具体实现</strong>，这样当有一个需要函数式接口参数的方法时，我们就可以给其传递一个对应的lambda表达式作为参数。执行的时候就会自动执行函数式接口中的唯一方法，也就是传递过去的lambda表达式了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;lambda表达式不光可以进行遍历。还可以利用return语句进行逻辑上的判断等等。&lt;/p&gt;
    
    </summary>
    
      <category term="Java学习" scheme="http://49.234.121.116/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Java" scheme="http://49.234.121.116/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中集合的学习</title>
    <link href="http://49.234.121.116/2020/04/29/java1/"/>
    <id>http://49.234.121.116/2020/04/29/java1/</id>
    <published>2020-04-29T08:56:03.000Z</published>
    <updated>2020-05-14T01:51:25.747Z</updated>
    
    <content type="html"><![CDATA[<p>Java中的集合的学习，方法总结的不是很全。</p><p>有方法不会的有问题可以试着去看API，那是个好东西<em>(:з)∠)</em></p><p>我还是太懒了哈哈哈哈哈哈哈哈哈哈哈哈哈</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=563241179&auto=1&height=66"></iframe><h1 id="关系图"><a href="#关系图" class="headerlink" title="关系图"></a>关系图</h1><p><img src="/2020/04/29/java1/1.png" alt=""></p><h1 id="Collection单列接口"><a href="#Collection单列接口" class="headerlink" title="Collection单列接口"></a>Collection单列接口</h1><h2 id="单列集合中list接口"><a href="#单列集合中list接口" class="headerlink" title="单列集合中list接口"></a>单列集合中list接口</h2><p><strong>存放有序，可重复</strong><br><strong>带索引</strong></p><h3 id="ArrayList实现类"><a href="#ArrayList实现类" class="headerlink" title="ArrayList实现类"></a>ArrayList实现类</h3><p>底层实现是数组<br>查询快，增删慢</p><h3 id="LinkedList实现类"><a href="#LinkedList实现类" class="headerlink" title="LinkedList实现类"></a>LinkedList实现类</h3><p>底层实现是链表<br>查询慢，增删快</p><h3 id="Vector实现类"><a href="#Vector实现类" class="headerlink" title="Vector实现类"></a>Vector实现类</h3><p>暂未学习</p><h3 id="代码学习"><a href="#代码学习" class="headerlink" title="代码学习"></a>代码学习</h3><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ArrayList&lt;<span class="built_in">Integer</span>&gt; <span class="built_in">list</span>= <span class="literal">new</span> ArrayList&lt;<span class="built_in">Integer</span>&gt;();</span><br><span class="line"><span class="built_in">list</span>.add(<span class="string">"张三"</span>);</span><br><span class="line"><span class="built_in">list</span>.add(<span class="string">"张四"</span>);</span><br><span class="line"><span class="built_in">list</span>.add(<span class="string">"张五"</span>);</span><br><span class="line">        for (<span class="built_in">String</span> i:<span class="built_in">list</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           System.out.print(i+<span class="string">" "</span>);</span><br><span class="line">       &#125;</span><br><span class="line"><span class="comment">//等等</span></span><br></pre></td></tr></table></figure><h2 id="单列集合中set接口"><a href="#单列集合中set接口" class="headerlink" title="单列集合中set接口"></a>单列集合中set接口</h2><p><strong>存放无序，不可重复，存放时调用equals()判断</strong><br><strong>无索引</strong></p><h3 id="HashSet实现类"><a href="#HashSet实现类" class="headerlink" title="HashSet实现类"></a>HashSet实现类</h3><p><strong>底层是哈希表加红黑树（JDK8）实现</strong><br><strong>存取无序</strong></p><h3 id="LinkedHashSet实现类"><a href="#LinkedHashSet实现类" class="headerlink" title="LinkedHashSet实现类"></a>LinkedHashSet实现类</h3><p><strong>底层是哈希表加链表实现</strong><br><strong>存取有序</strong></p><h3 id="TreeSet实现类"><a href="#TreeSet实现类" class="headerlink" title="TreeSet实现类"></a>TreeSet实现类</h3><p><strong>底层二叉树实现</strong><br><strong>排序</strong></p><h3 id="代码学习-1"><a href="#代码学习-1" class="headerlink" title="代码学习"></a>代码学习</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">student</span> <span class="keyword">implements</span> <span class="title">Comparable</span>//自然排序</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line">    student(<span class="keyword">int</span> age,String name)&#123;</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    student()&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重载equals方法，从逻辑上保证Set集合的特性（若不重载equals方法，对象的元素值无法明确比较）</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        student student = (student) o;</span><br><span class="line">        <span class="keyword">return</span> age == student.age &amp;&amp;</span><br><span class="line">                Objects.equals(name, student.name);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//重载hashCode方法，从逻辑上保证Set集合的元素唯一特性（若不重载hashCode方法，成员相同返回的是不同地址值）</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(age, name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"student&#123;"</span> +</span><br><span class="line">                <span class="string">"age="</span> + age +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">@Override</span><span class="comment">//自然排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        student a = <span class="keyword">new</span> student(<span class="number">19</span>,<span class="string">"tom"</span>);<span class="comment">//进行调试来学习特性</span></span><br><span class="line">        student b = <span class="keyword">new</span> student(<span class="number">12</span>,<span class="string">"jerry"</span>);</span><br><span class="line">        student c = <span class="keyword">new</span> student(<span class="number">15</span>,<span class="string">"jack"</span>);</span><br><span class="line">       HashSet&lt;student&gt; set = <span class="keyword">new</span> HashSet&lt;student&gt;();</span><br><span class="line">        set.add(a);</span><br><span class="line">        set.add(b);</span><br><span class="line">        set.add(c);</span><br><span class="line">        <span class="keyword">for</span>(student n:set)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.println(n);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//------------------------------------------------</span></span><br><span class="line">       inter i = <span class="keyword">new</span> inter();<span class="comment">//定制排序method 1</span></span><br><span class="line">        TreeSet&lt;student&gt; ts = <span class="keyword">new</span> TreeSet&lt;student&gt;(<span class="keyword">new</span> Comparator&lt;student&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span><span class="comment">//method2</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(student student, student t1)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> student.age-t1.age;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        ts.add(a);</span><br><span class="line">        ts.add(b);</span><br><span class="line">        ts.add(c);</span><br><span class="line">        <span class="keyword">for</span>(student n:ts)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">inter</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">student</span>&gt;//定制排序<span class="title">method2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(student student, student t1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> student.age-t1.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="综合应用案例，实现随机数"><a href="#综合应用案例，实现随机数" class="headerlink" title="综合应用案例，实现随机数"></a>综合应用案例，实现随机数</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*生成 [low, high) 之间不重复的若干个随机整数，排序后输出到控制台。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        l  注意区间的开闭，左闭右开。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        l  区间的左右边界由用户在控制台输入，并进行适当的有效性验证。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        l  生成的随机数需要去重复，用Set类型存储这些随机数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        l  随机数个数不能大于区间的长度。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        l  生成的随机数排序后打印到控制台，提示使用List.sort()方法排序*/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> demo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">public</span> static <span class="type">void</span> main(String[] args) &#123;</span><br><span class="line">        Random r = <span class="built_in">new</span> Random();</span><br><span class="line">        com c = <span class="built_in">new</span> com();</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("请输入下限");</span><br><span class="line">        Scanner scanner = <span class="built_in">new</span> Scanner(<span class="keyword">System</span>.<span class="keyword">in</span>);</span><br><span class="line">        HashSet&lt;<span class="type">Integer</span>&gt; <span class="keyword">set</span>= <span class="built_in">new</span> HashSet&lt;<span class="type">Integer</span>&gt;();</span><br><span class="line">        ArrayList&lt;<span class="type">Integer</span>&gt; list= <span class="built_in">new</span> ArrayList&lt;<span class="type">Integer</span>&gt;();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/*List&lt;Integer&gt; list= new ArrayList&lt;Integer&gt;(new Comparator&lt;Integer&gt;() &#123;</span></span><br><span class="line"><span class="comment">                @Override//method2</span></span><br><span class="line"><span class="comment">            public int compare(Integer integer, Integer t1) &#123;</span></span><br><span class="line"><span class="comment">                return integer-t1;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);此方法不可行*/</span></span><br><span class="line">        <span class="type">int</span> min = scanner.nextInt();</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("为保证随机数据的可观察性，请输入较为大的区间范围（建议100）。程序采用随机数概率进行循环判断，若数据较少请多运行几次");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("请输入上限");// 区间的左右边界由用户在控制台输入</span><br><span class="line">        <span class="type">int</span> max = scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> flag;//控制概率。</span><br><span class="line">        <span class="type">int</span> randomNum;</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("未经去重排序的随机数");</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            randomNum = r.nextInt((max - min)) + min;//注意区间的开闭，左闭右开。</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.print(randomNum+" ");</span><br><span class="line">            <span class="keyword">set</span>.<span class="keyword">add</span>(randomNum);//去重</span><br><span class="line">            flag = r.nextInt(<span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">while</span>(randomNum&gt;=min&amp;&amp;randomNum&lt;max&amp;&amp;<span class="keyword">set</span>.size()&lt;max-min&amp;&amp;flag&gt;<span class="number">10</span>);//并进行适当的有效性验证。随机数个数不能大于区间的长度。控制概率。</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("去重后：");</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i:<span class="keyword">set</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.print(i+" ");</span><br><span class="line">            list.<span class="keyword">add</span>(i);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">       // Collections.sort(list); //此排序方法较为简单</span><br><span class="line">        list.sort(c);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("排序后：");</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i:list)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.print(i+" ");</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> com implements Comparator&lt;<span class="type">Integer</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> <span class="type">int</span> compare(<span class="type">Integer</span> <span class="type">integer</span>, <span class="type">Integer</span> t1) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">integer</span>-t1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="双列Map接口"><a href="#双列Map接口" class="headerlink" title="双列Map接口"></a>双列Map接口</h1><p>key and values</p><p>一次存取一对值</p><p>key值不允许重复</p><h2 id="HashMap实现类"><a href="#HashMap实现类" class="headerlink" title="HashMap实现类"></a>HashMap实现类</h2><p>底层为数组加链表组成的哈希表，增删改查都很快<br>存取无序</p><h3 id="代码学习-2"><a href="#代码学习-2" class="headerlink" title="代码学习"></a>代码学习</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class Hashmap</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        HashMap&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt;();<span class="comment">//底层创建长度为16的数组，水平结构</span></span><br><span class="line">        <span class="comment">//竖直：链表结构</span></span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"hm001"</span>,<span class="string">"张三"</span>);</span><br><span class="line">        <span class="keyword">String</span> value = <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"hm002"</span>,<span class="string">"李四"</span>);<span class="comment">//put返回原位置的值</span></span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"hm003"</span>,<span class="string">"王五"</span>);</span><br><span class="line">        <span class="keyword">String</span> oldvalue = <span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"hm003"</span>,<span class="string">"赵六"</span>);<span class="comment">//键不能重复，如重复新值替换老值//put返回老的值</span></span><br><span class="line">        System.out.<span class="built_in">println</span>(oldvalue);</span><br><span class="line">        System.out.<span class="built_in">println</span>(value);</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="built_in">map</span>);</span><br><span class="line">        <span class="comment">//1.通过hashcode计算哈希值</span></span><br><span class="line">        <span class="comment">// 2.若储存位置有元素调用equals方法（使用键值比较）</span></span><br><span class="line">        <span class="comment">//2.1若equals方法返回true，新值替换老值，put返回老的值</span></span><br><span class="line">        <span class="comment">//2.2若哈希值计算相同，equals方法返回false，将后添加的元素放在下列</span></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"hm001"</span>.hashCode());</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"hm002"</span>.hashCode());</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"重地"</span>.hashCode());</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"通话"</span>.hashCode());</span><br><span class="line">        <span class="comment">//int size()返回Map集合键值对映射的个数</span></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="built_in">map</span>.<span class="built_in">size</span>());</span><br><span class="line">        <span class="comment">//get()方法</span></span><br><span class="line">        <span class="keyword">String</span> value2 = <span class="built_in">map</span>.<span class="built_in">get</span>(<span class="string">"hm001"</span>);</span><br><span class="line">        <span class="comment">//containsKey()方法</span></span><br><span class="line">        <span class="keyword">boolean</span> a1 = <span class="built_in">map</span>.containsKey(<span class="string">"hm001"</span>);</span><br><span class="line">        <span class="comment">//containsValue()方法</span></span><br><span class="line">        a1 = <span class="built_in">map</span>.containsValue(<span class="string">"张三"</span>);</span><br><span class="line">        <span class="comment">//remove()方法，删一对</span></span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">remove</span>(<span class="string">"hm001"</span>);</span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">remove</span>(<span class="string">"hm001"</span>,<span class="string">"张三"</span>);</span><br><span class="line">        <span class="comment">//clear()清空所有;</span></span><br><span class="line">        <span class="built_in">map</span>.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="comment">//replace方法</span></span><br><span class="line">        <span class="built_in">map</span>.replace(<span class="string">"hm002"</span>,<span class="string">"赵天"</span>);</span><br><span class="line">        <span class="comment">//默认为16个，当添加12个以上的时候，扩容至32个</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历方法</span></span><br><span class="line">        <span class="comment">// keySet方法</span></span><br><span class="line">        Set&lt;<span class="keyword">String</span>&gt; keys = <span class="built_in">map</span>.keySet();</span><br><span class="line">        <span class="built_in">for</span> (<span class="keyword">String</span> key:keys)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">String</span> values = <span class="built_in">map</span>.<span class="built_in">get</span>(key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// entrySet方法</span></span><br><span class="line">        Set&lt; Map.Entry&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt;&gt; entrys = <span class="built_in">map</span>.entrySet();</span><br><span class="line">        Iterator&lt;Map.Entry&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt;&gt; it = entrys.iterator();</span><br><span class="line">        <span class="built_in">while</span> (it.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            Map.Entry&lt;<span class="keyword">String</span>,<span class="keyword">String</span>&gt; entry = it.next();</span><br><span class="line">            entry.<span class="built_in">getKey</span>();</span><br><span class="line">            entry.getValue();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//forEach方法</span></span><br><span class="line">        <span class="built_in">map</span>.forEach((<span class="keyword">String</span> a,<span class="keyword">String</span> b)-&gt;&#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(a+b);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//values方法</span></span><br><span class="line">        Collection&lt;<span class="keyword">String</span>&gt; collec = <span class="built_in">map</span>.values();</span><br><span class="line">        collec.forEach((<span class="keyword">String</span> s)-&gt;&#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(s);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TreeMap实现类"><a href="#TreeMap实现类" class="headerlink" title="TreeMap实现类"></a>TreeMap实现类</h2><p>排序，和TreeSet用法几乎一致。</p><h2 id="HashTable实现类"><a href="#HashTable实现类" class="headerlink" title="HashTable实现类"></a>HashTable实现类</h2><h3 id="Properties实现类"><a href="#Properties实现类" class="headerlink" title="Properties实现类"></a>Properties实现类</h3><p>一般用于配置文件的读取</p><p>key=values形式</p><p>例如<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tel</span>=<span class="number">18888886666</span></span><br><span class="line"><span class="attr">name</span>=xiaoming</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java中的集合的学习，方法总结的不是很全。&lt;/p&gt;
&lt;p&gt;有方法不会的有问题可以试着去看API，那是个好东西&lt;em&gt;(:з)∠)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我还是太懒了哈哈哈哈哈哈哈哈哈哈哈哈哈&lt;/p&gt;
    
    </summary>
    
      <category term="Java学习" scheme="http://49.234.121.116/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Java" scheme="http://49.234.121.116/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>将本地的hexo博客项目部署到腾讯云ubuntu18.04服务器上</title>
    <link href="http://49.234.121.116/2020/04/24/eeee/"/>
    <id>http://49.234.121.116/2020/04/24/eeee/</id>
    <published>2020-04-23T16:42:01.000Z</published>
    <updated>2020-04-23T16:46:34.820Z</updated>
    
    <content type="html"><![CDATA[<p>把hexo博客搭到github上后，因为github的访问速度较慢。我就有了把这个博客部署在我的服务器上的想法。依靠于git这一强大的版本管理软件，我们很轻松就可以完成部署。<br><a id="more"></a></p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1440197497&auto=0&height=66"></iframe></p><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>在我们的服务器上安装git用于版本管理和部署，Nginx 用于静态博客托管。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install git </span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install nginx </span><br></pre></td></tr></table></figure></p><h2 id="创建私有git仓库"><a href="#创建私有git仓库" class="headerlink" title="创建私有git仓库"></a>创建私有git仓库</h2><p>在 /var/repo/ 下，创建一个名为 hexo_static 的裸仓库（bare repo）。<br>如果没有 /var/repo 目录，需要先创建；<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /<span class="built_in">var</span>/repo/</span><br></pre></td></tr></table></figure><br>修改目录的所有权和用户权限，使得所有用户都具备 /var/repo 目录下所有新生成的目录和文件的权限。<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown <span class="params">-R</span> $USER:$USER /<span class="built_in">var</span>/repo/</span><br><span class="line">sudo chmod <span class="params">-R</span> <span class="number">755</span> /<span class="built_in">var</span>/repo/</span><br></pre></td></tr></table></figure><br>cd到/var/repo<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/var/repo/</span></span><br></pre></td></tr></table></figure><br>初始化仓库<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment">--bare hexo_static.git</span></span><br></pre></td></tr></table></figure></p><h2 id="配置-Nginx-托管文件目录"><a href="#配置-Nginx-托管文件目录" class="headerlink" title="配置 Nginx 托管文件目录"></a>配置 Nginx 托管文件目录</h2><p>创建 /var/www/hexo 目录，用于 Nginx 托管。<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /<span class="built_in">var</span>/www/hexo</span><br></pre></td></tr></table></figure><br>这里也需要修改目录的所有权和权限。<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown <span class="params">-R</span> $USER:$USER /<span class="built_in">var</span>/www/hexo</span><br><span class="line">sudo chmod <span class="params">-R</span> <span class="number">755</span> /<span class="built_in">var</span>/www/hexo</span><br></pre></td></tr></table></figure><br>然后，修改 Nginx 的 default 设置：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span><span class="keyword">default</span> <span class="comment">//用vim也行</span></span><br></pre></td></tr></table></figure><br>将其中的 root 指令指向 /var/www/hexo 目录。<br><img src="/2020/04/24/eeee/1.png" alt=""><br><em>默认访问端口是80</em><br>保存并退出文件。如果以后购买并备案域名之后，可以再将配置中的 default_server 修改为你的域名。</p><p>最后，重启 Nginx 服务，使得改动生效。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>nginx restart</span><br></pre></td></tr></table></figure></p><p>这时候你可以使用rz命令随意上传一个html文件到/var/www/hexo里<br>然后在浏览器里输入你的公网IP/上传的文件名.html，就能看到你上传内容啦</p><h2 id="创建-Git-钩子"><a href="#创建-Git-钩子" class="headerlink" title="创建 Git 钩子"></a>创建 Git 钩子</h2><p>接下来，在服务器上的裸仓库 hexo_static 创建一个钩子，在满足特定条件时将静态 HTML 文件传送到 Web 服务器的目录下，即 /var/www/hexo。</p><p>在自动生成的 hooks 目录下创建一个新的钩子文件：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano <span class="regexp">/var/</span>repo<span class="regexp">/hexo_static.git/</span>hooks<span class="regexp">/post-receive</span></span><br></pre></td></tr></table></figure></p><p>在该文件中添加两行代码，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">git --work-tree=/var/www/hexo --git-dir=/var/repo/hexo_static.git checkout -f</span><br></pre></td></tr></table></figure></p><p>ctrl + o 保存并退出文件</p><p>并让该文件变为可执行文件<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="regexp">/var/</span>repo<span class="regexp">/hexo_static.git/</span>hooks<span class="regexp">/post-receive</span></span><br></pre></td></tr></table></figure></p><p><strong>至此，服务端的配置基本结束。</strong></p><h1 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h1><h2 id="配置博客根目录下的-config-yml文件"><a href="#配置博客根目录下的-config-yml文件" class="headerlink" title="配置博客根目录下的_config.yml文件"></a>配置博客根目录下的_config.yml文件</h2><p>如图,修改URL<br><img src="/2020/04/24/eeee/2.png" alt=""></p><p>修改deploy<br><img src="/2020/04/24/eeee/3.png" alt=""><br><strong>这里是双部署，所以这么写</strong></p><p>保存好后，在博客根目录右键gitbash<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><br>就可以部署了，部署中要输入你的用户密码。</p><p>第一次部署会要求储存密钥，在框里输入yes就行</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把hexo博客搭到github上后，因为github的访问速度较慢。我就有了把这个博客部署在我的服务器上的想法。依靠于git这一强大的版本管理软件，我们很轻松就可以完成部署。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="云服务器" scheme="http://49.234.121.116/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="云服务器" scheme="http://49.234.121.116/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云ubuntu18.04的图形化界面安装，桌面的远程链接</title>
    <link href="http://49.234.121.116/2020/04/21/study2020421/"/>
    <id>http://49.234.121.116/2020/04/21/study2020421/</id>
    <published>2020-04-21T11:55:50.000Z</published>
    <updated>2020-05-06T14:30:45.499Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=507585220&auto=0&height=66"></iframe><p>愿世界疫情好转，放下偏见，打造人类命运共同体。<br><a id="more"></a></p><h2 id="世界加油"><a href="#世界加油" class="headerlink" title="世界加油"></a>世界加油</h2><iframe src="//player.bilibili.com/player.html?aid=87086471&bvid=BV1V7411h78d&cid=148816107&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>现在是2020年4月21号，我们还没有开学。在哈尔滨又出现了聚集性病例。在过去的三个月里，我们见证了世界自二战以来最大的动荡，全中国十亿人宅家两个月，美股数次熔断，高考七月举行，奥运会奇数年召开，英国正式脱欧，中国十天建成一座医院，耶路撒冷圣墓教堂关闭。。。历史将走向何处，没有人知道。<br>但看到那无数挺身而出的医生，军人，工人。。。看到我们祖国的“饱和式驰援”。我相信，我们一定会胜利的！</p><h2 id="图形化界面的安装，桌面的远程链接"><a href="#图形化界面的安装，桌面的远程链接" class="headerlink" title="图形化界面的安装，桌面的远程链接"></a>图形化界面的安装，桌面的远程链接</h2><p>图形化界面和桌面其实概念有细微的差别。</p><p>桌面的概念比较窄，他是属于图形化界面的一种。</p><p>而只要以图形的形式展现在用户眼前的都叫图形化界面</p><p>比如这个</p><p><img src="/2020/04/21/study2020421/clock.png" alt=""></p><p>它就是个图形化界面</p><p>我们通过xclock这一命令打开的它<br>但我们不能通过图形化的方式来通过它来打开另一个软件<br>比如我们再想要打开firefox浏览器<br>我们就只能再输firefox代码，没有那种点点点的快感</p><p>这时候我们就需要桌面这个图形化界面了</p><p>比如喜闻乐见的windows桌面<br><img src="/2020/04/21/study2020421/1.png" alt=""></p><p>想点哪里点哪里，巨爽无比</p><p>事实上，我们使用apt-get install xxx桌面 时，他就会自动把依赖的图形化界面环境安上</p><p>你可以在确认时，仔细阅读它的依赖项来确认</p><h3 id="建议只安装一个桌面"><a href="#建议只安装一个桌面" class="headerlink" title="建议只安装一个桌面"></a>建议只安装一个桌面</h3><p>现在网上有很多教程的是安装gnome桌面，由于我们下面要用vncserver远程链接，所以这里<strong>强烈不推荐安装</strong>。（真实踩坑，卸都卸不干净，vnc也可能有问题，搞得我重装系统）</p><h3 id="建议安装xfce4桌面"><a href="#建议安装xfce4桌面" class="headerlink" title="建议安装xfce4桌面"></a>建议安装xfce4桌面</h3><p>安装前确认软件列表最新</p><pre><code>apt-get update</code></pre><p>安装xfce4</p><pre><code>sudo apt install xfce4 xfce4-goodies </code></pre><p>等他安好了，如果你通过终端肯定是看不到你的图形化界面的</p><p>所幸腾讯云提供了vnc的登录方式</p><p><img src="/2020/04/21/study2020421/2.png" alt=""></p><p>登上去以后</p><pre><code>startx</code></pre><p><img src="/2020/04/21/study2020421/3.png" alt=""><br>看到那只小老鼠了吗？哈哈哈</p><p>vnc登录有概率失败，不要慌，重试几次就好了</p><h3 id="以非root用户安装vnc4server远程链接桌面"><a href="#以非root用户安装vnc4server远程链接桌面" class="headerlink" title="以非root用户安装vnc4server远程链接桌面"></a>以非root用户安装vnc4server远程链接桌面</h3><p>每次打开控制台太麻烦了<br>我们想在手机，电脑，随时随地看到并操控我们的桌面</p><p><strong>怎么办呢？</strong></p><p>这里我们使用vncsever的方式</p><p>这里安装的是vnc4server，网上有些教程用的是tigervncserver，需要修改一堆配置文件，配置繁琐。<strong>且本人踩坑未能实现。</strong></p><p>安装vnc4server（以非root用户安装！以非root用户安装！以非root用户安装！不然会错）</p><pre><code>sudo apt-get install vnc4server</code></pre><p>以下操作全是以非root用户操作</p><h4 id="配置密码"><a href="#配置密码" class="headerlink" title="配置密码"></a>配置密码</h4><pre><code>vnc4passwd//最多8位，多了只保存前8位</code></pre><h4 id="启动服务，使系统自动生成xstartup配置文件"><a href="#启动服务，使系统自动生成xstartup配置文件" class="headerlink" title="启动服务，使系统自动生成xstartup配置文件"></a>启动服务，使系统自动生成xstartup配置文件</h4><pre><code>vnc4server :2</code></pre><h4 id="停止服务，修改配置文件"><a href="#停止服务，修改配置文件" class="headerlink" title="停止服务，修改配置文件"></a>停止服务，修改配置文件</h4><pre><code>vnc4server -kill :2</code></pre><h4 id="修改-vnc-xstartup配置文件"><a href="#修改-vnc-xstartup配置文件" class="headerlink" title="修改~/.vnc/xstartup配置文件"></a>修改~/.vnc/xstartup配置文件</h4><p><img src="/2020/04/21/study2020421/4.png" alt=""><br><strong>从注释看到我那悲惨的踩坑痕迹了吗5555555</strong></p><p>代码如下<br>unset SESSION_MANAGER<br>unset DBUS_SESSION_BUS_ADDRESS<br>startxfce4 &amp;<br>大意是选择xfce4桌面作为展示桌面</p><h4 id="正式启动服务"><a href="#正式启动服务" class="headerlink" title="正式启动服务"></a>正式启动服务</h4><pre><code>vnc4server -geometry 1920x1080 :2</code></pre><h3 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h3><p>以下操作可以由root用户操作</p><p>关闭防火墙<br>    iptables -F //清空规则，慎用<br>    ntsysv || service iptables stop //两个选一个，停止防火墙<br>关闭ufw<br> sudo ufw disable</p><p><strong>腾讯云安全组放开0.0.0.0/0的TCP:5901和TCP:5902端口</strong></p><p><img src="/2020/04/21/study2020421/5.png" alt=""></p><h3 id="本地和手机安装vncviewer"><a href="#本地和手机安装vncviewer" class="headerlink" title="本地和手机安装vncviewer"></a>本地和手机安装vncviewer</h3><p>下载地址：<br><a href="https://www.realvnc.com/en/connect/" target="_blank" rel="noopener">https://www.realvnc.com/en/connect/</a></p><p>安装后输入你的host地址:5902<br>如114.114.114.114:5902<br>再输入你设置的密码，就可了<br><img src="/2020/04/21/study2020421/6.png" alt=""><br>这里安全提示，我们contiue就行</p><h3 id="可能的bug（真实踩坑）"><a href="#可能的bug（真实踩坑）" class="headerlink" title="可能的bug（真实踩坑）"></a>可能的bug（真实踩坑）</h3><ul><li><p><strong>如果能输入密码，但链接后出现黑屏左上角有三个勾选框，或链接后鼠标变成x型，花屏或白屏。</strong></p><p>请检查你的xstartup文件，这是vncserver无法正确配置图形文件</p></li></ul><ul><li><p><strong>如果出现链接出现 connect:Connection refused(10061)</strong></p><p>请检查你的服务是否启动<br>  netstat -tlup | grep vnc<br>检查端口是否输入正确<br>检查自己系统的配置</p></li></ul><ul><li><p><strong>如果出现链接出现 connect:Connection refused(10060)</strong></p><p>检查你的防火墙设置，与腾讯云的安全组配置</p></li><li><p><strong>有时会提示太多访问（Too many security failtures），然后拒绝你的链接</strong></p><p>这是因为黑客导致的，重启vncserver服务就可</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=507585220&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;愿世界疫情好转，放下偏见，打造人类命运共同体。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="云服务器" scheme="http://49.234.121.116/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="云服务器" scheme="http://49.234.121.116/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的数据引擎InnoDB和MyIsam在索引的实现有什么区别。</title>
    <link href="http://49.234.121.116/2020/03/15/study2020422two/"/>
    <id>http://49.234.121.116/2020/03/15/study2020422two/</id>
    <published>2020-03-15T03:14:19.000Z</published>
    <updated>2020-04-22T10:59:19.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h1><p>InnoDB使用B+树完成数据库索引的实现，但是在数据存储时数据结构中存储的是实际数据，也就是聚集索引，不支持全文检索，启动也是比较慢的。<br>InnoDB引擎支持ACID事务的支持，提供了行级锁和外键约束，设计目标是处理大容量数据库系统，处理过程中会在内存中建立数据库缓冲区用于缓存数据和索引数据。但是如果进行select count(*) from &lt;table_name&gt;时，会进行全表扫描，不会缓存扫描结果；同时在高并发的情况下，由于InnoDB引擎支持的锁的粒度较细，不会在写操作时全表锁定，有利于高并发下性能的提升。</p><h1 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h1><p>MyIASM使用B+树完成数据库索引的实现，但是在数据存储时数据结构中存储的是实际数据的地址，被称为非聚集索引，支持全文检索<br>MyIASM不支持事务操作，不支持行级锁和外键的约束；在进行select count(*) from <table>操作时会缓存数据，不会进行全表扫描</table></p><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><p>在以下场合下，使用InnoDB是理想的选择：</p><p><strong>1.更新密集的表： InnoDB存储引擎特别适合处理多重并发的更新请求。</strong><br><strong>2.事务操作效率高： InnoDB存储引擎是支持事务的标准MySQL存储引擎。</strong><br><strong>3.自动灾难恢复： 与其它存储引擎不同，InnoDB表能够自动从灾难中恢复。</strong><br><strong>4.外键约束： MySQL支持外键的存储引擎只有InnoDB。</strong><br><strong>5.支持自动增加列AUTO_INCREMENT属性。</strong></p><p>*从5.7开始InnoDB存储引擎成为默认的存储引擎。</p><p>一般来说，如果需要事务支持，并且有较高的并发读取频率，InnoDB是不错的选择。</p><p>在以下场合下，使用MyISAM是理想的选择：</p><p><strong>1. 选择密集型的表： MyISAM存储引擎在筛选大量数据时非常迅速，这是它最突出的优点。</strong><br><strong>2. 插入密集型的表： MyISAM的并发插入特性允许同时选择和插入数据。</strong></p><p>MyISAM存储引擎很适合管理服务器日志数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;InnoDB&quot;&gt;&lt;a href=&quot;#InnoDB&quot; class=&quot;headerlink&quot; title=&quot;InnoDB&quot;&gt;&lt;/a&gt;InnoDB&lt;/h1&gt;&lt;p&gt;InnoDB使用B+树完成数据库索引的实现，但是在数据存储时数据结构中存储的是实际数据，也就是聚集索引，不支
      
    
    </summary>
    
      <category term="数据库" scheme="http://49.234.121.116/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://49.234.121.116/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>数据库的储存数据结构为什么是B+树</title>
    <link href="http://49.234.121.116/2020/02/12/study2020422/"/>
    <id>http://49.234.121.116/2020/02/12/study2020422/</id>
    <published>2020-02-12T00:30:50.000Z</published>
    <updated>2020-04-22T10:59:05.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h1><p>数据库操作的时间通常由存取磁盘的时间和CPU计算时间这两部分构成，而CPU的速度非常快，所以数据库的操作效率取决于访问磁盘的次数。<br>我们在数据库中的数据一般是放在磁盘中的，读取数据的时候，磁盘中有两个机械运动的部分，分别是盘片旋转和磁臂移动。盘片旋转就是我们市面上所提到的多少转每分钟，而磁盘移动则是在盘片旋转到指定位置以后，移动磁臂后开始进行数据的读写。那么这就存在一个定位到磁盘中的块的过程，而定位是磁盘的存取中花费时间比较大的一块，毕竟机械运动花费的时候要远远大于电子运动的时间。当大规模数据存储到磁盘中的时候，显然定位是一个非常花费时间的过程，但是我们可以通过B树进行优化，提高磁盘读取时定位的效率。</p><h1 id="为什么是B树"><a href="#为什么是B树" class="headerlink" title="为什么是B树"></a>为什么是B树</h1><h2 id="B树的性质"><a href="#B树的性质" class="headerlink" title="B树的性质"></a>B树的性质</h2><p>1、定义任意非叶子结点最多只有M个儿子，且M&gt;2；<br>2、根结点的儿子数为[2, M]；<br>3、除根结点以外的非叶子结点的儿子数为[M/2, M]；<br>4、每个结点存放至少M/2-1（取上整）和至多M-1个关键字；（至少2个关键字）<br>5、非叶子结点的关键字个数=指向儿子的指针个数-1；<br>6、非叶子结点的关键字：K[1], K[2], …, K[M-1]；且K[i] &lt; K[i+1]；<br>7、非叶子结点的指针：P[1], P[2], …, P[M]；其中P[1]指向关键字小于K[1]的子树，P[M]指向关键字大于K[M-1]的子树，其它P[i]指向关键字属于(K[i-1], K[i])的子树；<br>8、所有叶子结点位于同一层；<br>根据B类树的特点，我们可以构造一个多阶的B类树，在尽量多的在结点上存储相关的信息，保证层数尽量的少，以便后面我们可以更快的找到信息，磁盘的I/O操作也少一些。而且B类树是平衡树，每个结点到叶子结点的高度都是相同，保证了每个查询是稳定的。</p><p><img src="/2020/02/12/study2020422/1.png" alt=""><br><strong>35代表一个key(索引)，而小黑块代表的是这个key所指向的内容在内存中实际的存储位置，是一个指针。</strong></p><p>相对于二叉检索树，B树每个内节点有多个分支。与红黑树相比，在相同的的节点的情况下，一颗B/B+树的高度远远小于红黑树的高度。而关键字总数相同的情况下B树的高度越小，磁盘I/O所花的时间越少。</p><p>所以，为了提高磁盘的IO效率，B类树是我们的良好选择 </p><p>而B树有一个缺点，B树在提高了IO性能的同时并没有解决元素遍历的我效率低下的问题。<br>且内部节点都有一个指向关键字具体信息的指针，占用了一部分空间</p><p>为了解决这一问题，人们提出了B+树</p><h2 id="B-树的性质（和B树不相同的性质）"><a href="#B-树的性质（和B树不相同的性质）" class="headerlink" title="B+树的性质（和B树不相同的性质）"></a>B+树的性质（和B树不相同的性质）</h2><p>1、非叶子节点的子树指针与关键字个数相同；<br>2、非叶子节点的子树指针p[i],指向关键字值属于[k[i],k[i+1]]的子树.(B树是开区间,也就是说B树不允许关键字重复,B+树允许重复)；<br>3、为所有叶子节点增加一个链指针；<br>4、所有关键字都在叶子节点出现(稠密索引). (且链表中的关键字恰好是有序的)；<br>5、非叶子节点相当于是叶子节点的索引(稀疏索引),叶子节点相当于是存储(关键字)数据的数据层；<br>6、更适合于文件系统；</p><p><img src="/2020/02/12/study2020422/2.png" alt=""><br><strong>非叶子节点（比如5，28，65）只是一个key（索引），实际的数据存在叶子节点上（5，8，9）才是真正的数据指向真实数据的指针。</strong></p><h1 id="B-树的优点"><a href="#B-树的优点" class="headerlink" title="B+树的优点"></a>B+树的优点</h1><p><strong>1.B+树的磁盘读写代价更低：</strong>B+树的内部节点并没有指向关键字具体信息的指针，占用的空间小。如果把所有同一内部节点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多，一次性读入内存的需要查找的关键字也就越多，相对IO读写次数就降低了。<br><strong>2.B+树的查询效率更加稳定：</strong>由于非终结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。<br><strong>3.B+更加方便遍历和查询： </strong>由于B+树的数据都存储在叶子结点中，分支结点均为索引，方便扫库，只需要扫一遍叶子结点即可，但是B树因为其分支结点同样存储着数据，我们要找到具体的数据，需要进行一次中序遍历按序来扫，而B+树更加适合在区间查询的情况，所以通常B+树更适用于数据库索引。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>1、<a href="http://blog.csdn.net/whoamiyang/article/details/51926985" target="_blank" rel="noopener">http://blog.csdn.net/whoamiyang/article/details/51926985</a><br>2、<a href="https://www.cnblogs.com/George1994/p/7008732.html" target="_blank" rel="noopener">https://www.cnblogs.com/George1994/p/7008732.html</a><br>3、《MySQL技术内幕 InnoDB存储引擎 姜承尧 第2版》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;原理分析&quot;&gt;&lt;a href=&quot;#原理分析&quot; class=&quot;headerlink&quot; title=&quot;原理分析&quot;&gt;&lt;/a&gt;原理分析&lt;/h1&gt;&lt;p&gt;数据库操作的时间通常由存取磁盘的时间和CPU计算时间这两部分构成，而CPU的速度非常快，所以数据库的操作效率取决于访问磁盘的
      
    
    </summary>
    
      <category term="数据库" scheme="http://49.234.121.116/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://49.234.121.116/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>sql语句，及腾讯云http服务学习(如何把本地的网站项目部署到服务器上)</title>
    <link href="http://49.234.121.116/2019/11/19/study/"/>
    <id>http://49.234.121.116/2019/11/19/study/</id>
    <published>2019-11-19T08:07:20.000Z</published>
    <updated>2020-04-22T10:58:37.179Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29717114&auto=0&height=66"></iframe><p>空余时间自己学的一些东西，记录一下。</p><p>目前有Mysql，前端，和云服务器管理</p><a id="more"></a><h2 id="关于MySQL"><a href="#关于MySQL" class="headerlink" title="关于MySQL"></a>关于MySQL</h2><h3 id="列出"><a href="#列出" class="headerlink" title="列出"></a>列出</h3><p>show databases </p><p>show create database database-name ;</p><p>show tables；</p><p>show create table tablename ;</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>CREATE DATABASE database-name if not exists;</p><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>drop database dbname if exists;</p><h3 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h3><p>use database-name</p><h4 id="查询正在使用的数据库名"><a href="#查询正在使用的数据库名" class="headerlink" title="查询正在使用的数据库名"></a>查询正在使用的数据库名</h4><p>select database()</p><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><h4 id="修改数据库的名称"><a href="#修改数据库的名称" class="headerlink" title="修改数据库的名称"></a>修改数据库的名称</h4><p>sp_renamedb ‘old_name’, ‘new_name’;</p><h4 id="修改数据库的字符集"><a href="#修改数据库的字符集" class="headerlink" title="修改数据库的字符集"></a>修改数据库的字符集</h4><p>alter database database-name character set 字符集名称</p><h3 id="创建新表"><a href="#创建新表" class="headerlink" title="创建新表"></a>创建新表</h3><p>create table name(列名 类型，列名2 类型2 ,..)</p><h4 id="根据已有的表创建新表："><a href="#根据已有的表创建新表：" class="headerlink" title="根据已有的表创建新表："></a>根据已有的表创建新表：</h4><p>create table tab_new like tab_old (使用旧表创建新表)</p><h3 id="查询表"><a href="#查询表" class="headerlink" title="查询表"></a>查询表</h3><p>show tables –查询表</p><p>desc tablename –查询表结构</p><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><p>drop table tablename if exits;</p><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><h4 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h4><p>alter table 表名 rename to 新表名</p><h4 id="修改字符集名称"><a href="#修改字符集名称" class="headerlink" title="修改字符集名称"></a>修改字符集名称</h4><p>alter table 表名 character set 字符集名称</p><h4 id="增加列"><a href="#增加列" class="headerlink" title="增加列"></a>增加列</h4><p>alter table 表名 add 列名 数据类型</p><p>A：alter table 表名 change 列名 新列名 新数据类型</p><p>B：alter table 表名 modify 列名 新数据类型</p><h4 id="增加列-1"><a href="#增加列-1" class="headerlink" title="增加列"></a>增加列</h4><p>alter table stu drop sex;</p><h3 id="添加主键"><a href="#添加主键" class="headerlink" title="添加主键"></a>添加主键</h3><p>Alter table tabname add primary key(列名)</p><h3 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h3><p>Alter table tabname drop primary key(列名)</p><h3 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h3><p>选择：select * from table1 where 范围</p><p>插入：insert into table1(field1,field2) values(value1,value2)</p><p>删除：delete from table1 where 范围</p><p>更新：update table1 set field1=value1 where 范围</p><p>查找：select * from table1 where field1 like ’%value1%’   注意 _ 和 % </p><p>排序：select * from table1 order by field1,field2 [desc]</p><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p>总数：select count() as totalcount from table1</p><p>求和：select sum(field1) as sumvalue from table1</p><p>平均：select avg(field1) as avgvalue from table1</p><p>最大：select max(field1) as maxvalue from table1</p><p>最小：select min(field1) as minvalue from table1</p><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p>Group by</p><p>Select sex AVG(math),Count(id) from student Where math &gt; 70 Group by sex Having count(id&gt;2)</p><p>一张表，一旦分组完成后，查询后只能得到组相关的信息。</p><p>在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据</p><p>注意：</p><p>1.分组之后查询的字段：<br>    分组字段，聚合函数</p><p>2.where和having的区别</p><pre><code>where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来</code></pre><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p>limit（MySQL方言）</p><p>select * from student limit 0,3;  –第一页</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><strong>&gt;</strong><br><strong>&lt;</strong><br><strong>=</strong><br><strong>&lt;=</strong><br><strong>&gt;=</strong><br><strong>&lt;&gt; !=</strong> –不等于<br><strong>LIKE</strong><br><strong>IS NULL</strong> –判断NULL不能用＝NULL<br><strong>and &amp;&amp;</strong><br><strong>or ||</strong><br><strong>not !</strong><br><strong>IN(集合)</strong><br><strong>BETWEEN….AND</strong></p><h4 id="between的用法"><a href="#between的用法" class="headerlink" title="between的用法"></a>between的用法</h4><p>between限制查询数据范围时包括了边界值,not between不包括</p><p>select * from table1 where time between time1 and time2</p><p>select a,b,c, from table1 where a not between 数值1 and 数值2</p><h4 id="in-的使用方法"><a href="#in-的使用方法" class="headerlink" title="in 的使用方法"></a>in 的使用方法</h4><p>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)</p><h2 id="关于前端"><a href="#关于前端" class="headerlink" title="关于前端"></a>关于前端</h2><p>稍微学习了一下html<br>果然是标识语言，真的很好理解</p><h3 id="html基本框架"><a href="#html基本框架" class="headerlink" title="html基本框架"></a>html基本框架</h3><p>一个基本框架就是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"关键词，关键字"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"描述信息"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>你的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>music类</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span> = “<span class="symbol">music</span>”&gt;&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure><p>这就是<body>里的组成部分，也是网页设计的主体<script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"debug":false,"model":{"jsonPath":"/live2dw/assets/miku.model.json"},"display":{"position":"right","width":110,"height":220},"mobile":{"show":true},"log":false});</script></body></p><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>对于</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span> = “<span class="symbol">music</span>”&gt;&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure><p>可以用面向对象的思想去理解</p><p>然后用层叠样式表（css）来去表示颜色和大小还有属性等等。。。</p><p>位置写在head里，用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>“圈起来”</p><p>例如</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span>&#123;<span class="attribute">width</span>:<span class="number">720px</span>;<span class="attribute">height</span>:<span class="number">470px</span>;<span class="attribute">margin</span>:<span class="number">130px</span> auto;&#125;</span><br></pre></td></tr></table></figure><p>注意如果后面跟子类要加一个空格</p><p>例如<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span>&#123;<span class="attribute">width</span>:<span class="number">50%</span>;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="number">#59a2cc</span><span class="comment">/*#7ccaef*/</span>;<span class="attribute">float</span>:right;<span class="attribute">overflow-y</span>:auto;<span class="attribute">opacity</span>:<span class="number">0.6</span>&#125;</span><br></pre></td></tr></table></figure></p><h3 id="文本表示"><a href="#文本表示" class="headerlink" title="文本表示"></a>文本表示</h3><p>目前除列表我只知道这一种形式的表示</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">music</span>"&gt;</span><br><span class="line">&lt;<span class="symbol">h2</span>&gt;首次加载歌曲时间可能较长,请等待<span class="symbol">15</span>秒左右&lt;/<span class="symbol">h2</span>&gt;</span><br></pre></td></tr></table></figure><p>即属于music的文字</p><p>然后样式呢就用css层叠样式表写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_lrc</span> <span class="selector-tag">h2</span>&#123;<span class="attribute">height</span>:<span class="number">60px</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">text-align</span>:center;<span class="attribute">line-height</span>:<span class="number">60px</span>;<span class="attribute">opacity</span>:<span class="number">0.6</span>;<span class="attribute">color</span>:<span class="number">#000</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="图片表示"><a href="#图片表示" class="headerlink" title="图片表示"></a>图片表示</h3><p>同样，我只知道一种方式QAQ</p><p><strong>我真菜</strong></p><p>首先用url传，我估计无论什么方法应该都是</p><p>同样，在css里</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_lrc</span> <span class="selector-class">.m_con</span>&#123;<span class="attribute">height</span>:<span class="number">410px</span>;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">"images/6.gif"</span>);<span class="attribute">opacity</span>:<span class="number">0.6</span>;&#125;</span><br></pre></td></tr></table></figure><p>在background里写上url(相对路径)</p><p>就可以了</p><p>至于怎么调整效果，看着来就好了，毕竟从网上找到图片一般不可能那么正好</p><p>具体可以参考一下下面的这篇文章</p><p><a href="https://www.cnblogs.com/tugenhua0707/p/5260411.html" target="_blank" rel="noopener">这篇博文讲的很详细</a></p><h3 id="ul-li列表"><a href="#ul-li列表" class="headerlink" title="ul li列表"></a>ul li列表</h3><p>在一个类的下面<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><br>样式设置跟文字差不多</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">line-height</span>:<span class="number">38px</span>;<span class="attribute">padding-left</span>:<span class="number">18px</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#7d7d7d</span>;&#125;</span><br></pre></td></tr></table></figure><p>注意</p><ul><li><p>初始的时候这个列表是自带样式的，用这个关掉 list-style:none</p></li><li><p>如果添加的太多的话，会overflow</p></li></ul><p>要想加拉动条的话，得从它属于的类的css里加一个参数 overflow-y:auto; </p><p>如上例</p><p>需从m_list的css里添加 overflow-y:auto;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span>&#123;<span class="attribute">width</span>:<span class="number">50%</span>;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="number">#59a2cc</span><span class="comment">/*#7ccaef*/</span>;<span class="attribute">float</span>:right;<span class="attribute">overflow-y</span>:auto;<span class="attribute">opacity</span>:<span class="number">0.6</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>如果需要把鼠标移上去的反馈</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">cursor</span>:pointer;<span class="attribute">background</span>:<span class="built_in">linear-gradient</span>(50deg,#dddcce,#00ccff,#fff);<span class="attribute">color</span>:<span class="number">#000</span>;<span class="attribute">transition</span>:<span class="number">0.2s</span>;&#125;</span><br></pre></td></tr></table></figure><p>cursor:pointer 移上变小手</p><p>linear-gradient 色彩渐变</p><p>transition:0.2s 延迟显示</p><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p>我也不是特别懂javaScript，就不说了</p><p>这是html引用的语法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//创建一个音乐播放器</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> audioDom = <span class="built_in">document</span>.createElement(<span class="string">"audio"</span>);</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">play</span><span class="params">(name)</span></span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">///设置音乐播放地址</span></span></span><br><span class="line"><span class="actionscript">audioDom.src = <span class="string">"mp3/"</span>+name+<span class="string">".mp3"</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//播放</span></span></span><br><span class="line"><span class="actionscript">audioDom.autoplay = <span class="string">"autoplay"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h3><p><a href="http://49.234.121.116">87音乐播放器</a></p><p>做的一个小音乐播放器</p><p><img src="/2019/11/19/study/1.png" alt=""></p><p>是的，我把它放到服务器上了</p><p>用的云服务器，这就扯到另一块了</p><h2 id="关于云服务器"><a href="#关于云服务器" class="headerlink" title="关于云服务器"></a>关于云服务器</h2><h3 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h3><p>做完了那个小播放器，我就想把它让更多的人看见(<em>^_^</em>)<br>毕竟费了一番功夫<br>我就买了腾讯的云服务器<br><img src="/2019/11/19/study/云.png" alt=""><br>这里说一下，对比了其他的云服务提供商，还是腾讯的比较的靠谱</p><p>我真的是自来水，然后如果你是学生的话还有优惠，<strong>一个月只要10块钱</strong>。我就用的学生优惠，25以下还免认证<br> <img src="/2019/11/19/study/恰饭.png" alt=""></p><p><a href="https://cloud.tencent.com/act/cps/redirect?redirect=10004&amp;cps_key=2c553e3a03277b9a0cc24251ec595886" target="_blank" rel="noopener">点击这里购买学生优惠云服务器哟</a></p><p>操作系统我推荐ubuntu，我就用的这个。当然你要是对CentOS熟的话，用那个也无所谓</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>那么我们该怎样把一个做好的网站项目放到服务器让更多人看到呢？</p><p>服务器我们有了<br><img src="/2019/11/19/study/2.png" alt=""></p><p>这时候我们如果在我们电脑的浏览器直接输入我们服务器的ip的话，肯定显示不了什么东西。但是可以ping通。</p><p>这是为什么呢？</p><p>我们可以理解服务器为一台一直开着的电脑（买的时候也让你选操作系统了）那么如果这个电脑目前什么软件还没装，自然也实现不了功能。</p><p><strong>如果要实现网站访问，就必须给我们的服务器装对应的软件。</strong></p><p>这里，我用的是全世界应用最多的Web服务器软件之一 ——<strong>apache</strong></p><p><img src="/2019/11/19/study/3.png" alt=""></p><p>软件选好后，那我们就万事具备了。</p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>我们可以用终端访问云服务器</p><p>腾讯云有自带的控制台终端</p><p><img src="/2019/11/19/study/4.png" alt=""></p><p><img src="/2019/11/19/study/5.png" alt=""></p><p><strong>注意，你的服务器的初始用户的名称和密码以及公网IP都将通过腾讯云站内信的形式告诉你</strong></p><p>觉得初始密码麻烦可以登上去改一下</p><p>指令是<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ passwd</span><br><span class="line">Changing <span class="keyword">password</span> <span class="keyword">for</span> abhishek.</span><br><span class="line">(<span class="keyword">current</span>) UNIX <span class="keyword">password</span>: <span class="comment">--现在的密码</span></span><br><span class="line">Enter <span class="built_in">new</span> UNIX <span class="keyword">password</span>: <span class="comment">--（要设置的）新密码</span></span><br><span class="line">Retype <span class="built_in">new</span> UNIX <span class="keyword">password</span>: <span class="comment">--重新输一遍新密码</span></span><br><span class="line">passwd: <span class="keyword">password</span> updated successfully</span><br></pre></td></tr></table></figure></p><p><strong>在键入密码时，你不会从屏幕上看到任何东西。这在 UNIX 和 Linux 系统中是非常正常的表现。</strong></p><p>我们也可以用Xshell软件来登陆，因为我们后期要传文件，所以还是装上Xshell吧</p><p>装上后直接新建一个会话，主机就写你的公网IP，端口一般都是22（你要是不改的话）</p><p><img src="/2019/11/19/study/7.png" alt=""></p><p>然后确认，链接，就会让弹出窗口让你输入用户名和密码</p><p>连接上就行了</p><p>为了方便，我们直接切换到<strong>root用户</strong>进行操作</p><p>（云服务器刚开始给你的是普通用户）</p><p>很显然你之前没有设置root用户</p><p>那么</p><p>sudo passwd root</p><p>输入你现在这个普通用户的密码</p><p>下面会提示你输入新的密码,请注意这个就是你的root密码,请输入两次一样的密码,然后会提示你password updated successfully</p><p>然后输入 su root</p><p>就可以通过root访问了</p><h3 id="各种安装"><a href="#各种安装" class="headerlink" title="各种安装"></a>各种安装</h3><p>我们直接快速安装apache</p><p>sudo apt-get install httpd</p><p>会出现一系列的服务器软件，其中就有我们的apache</p><p>sudo apt-get install apache2<br>sudo apt-get install apache2-dev</p><p>一路y,等读条完后</p><p>sudo systemctl status apache2</p><p>检查是否安装成功</p><p><img src="/2019/11/19/study/6.png" alt=""></p><p>跟上图一样的话，恭喜你，apache成功安装了。</p><p>这时候，我们可以</p><p>curl 127.0.0.1</p><p>就会接收到一堆html的代码</p><p>这就是初始欢迎页面的html代码</p><p><img src="/2019/11/19/study/29.jpg" alt=""></p><p>当然，如果我们有图形界面的话，在图形界面的浏览器输入这个127.0.0.1就会看到页面的样子了</p><p><img src="/2019/11/19/study/8.png" alt=""></p><p><strong>满足你们的好奇心</strong></p><h3 id="上传网页"><a href="#上传网页" class="headerlink" title="上传网页"></a>上传网页</h3><p>软件安好了</p><p>/var/www/html</p><p>是apache的默认发布路径</p><p>所以我们只需要上传我们的项目到这个文件夹就可以了</p><p>这里拿我的项目举例</p><p><img src="/2019/11/19/study/9.png" alt=""></p><p>我们把这个目录原封不动的搬运到/var/www/html目录下就行了</p><p>怎么运呢，<strong>rz</strong>指令</p><p>先安装一下</p><p>apt-get install lrzsz</p><p>我们输入rz</p><p>就会出现<br><img src="/2019/11/19/study/10.png" alt=""><br>选中传就行</p><p><strong>注意，遇到文件夹时，要先在/var/www/html新建一个。</strong><br>指令：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> 你的文件夹名称</span><br></pre></td></tr></table></figure></p><p>然后再cd进去传。传完了别忘了再cd ..出来**</p><p><strong>传错的话</strong><br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rm</span> <span class="string">文件名</span></span><br><span class="line"><span class="attr">rm</span> <span class="string">-rf 文件夹</span></span><br></pre></td></tr></table></figure></p><p>接下来，不出意外的话———–你还是访问不了你的网页</p><p>为什么呢？</p><p>因为安全组</p><h3 id="安全组"><a href="#安全组" class="headerlink" title="安全组"></a>安全组</h3><p>这个东西是云服务器都有的<br>限制访问IP和端口以提高安全性</p><p><img src="/2019/11/19/study/11.png" alt=""></p><p>你可以按照腾讯云的提示做<br><a href="https://cloud.tencent.com/document/product/213/12452" target="_blank" rel="noopener">安全组帮助文档</a></p><p>也可以跟我一样，放开所有端口就完了</p><p>设置完保存后，在浏览器输入http://你的公网IP，就可以看到你的网页内容了！</p><p><strong>注意，好像不支持https访问，所以要用http。而很多浏览器可能默认https，所以你得手动输入</strong></p><h3 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h3><p>都完成后，就可以访问你的网页啦！</p><p><strong>注意！</strong><br><strong>注意！</strong><br><strong>注意！</strong></p><p>为了规范互联网信息服务活动，促进互联网信息服务健康有序发展，<br>根据国务院令第 292 号《互联网信息服务管理办法》和工信部令第 33 号《非经营性互联网信息服务备案管理办法》规定，<br>国家对经营性互联网信息服务实行许可制度，对非经营性互联网信息服务实行备案制度。<br>未取得许可或者未履行备案手续的，不得从事互联网信息服务，否则就属于违法行为。</p><p>所以，完成这些后一定要先备案呀！</p><p>而且没那么麻烦<br>现在方便很多了</p><p><a href="https://cloud.tencent.com/document/product/213/12452" target="_blank" rel="noopener">腾讯云备案链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=29717114&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;空余时间自己学的一些东西，记录一下。&lt;/p&gt;
&lt;p&gt;目前有Mysql，前端，和云服务器管理&lt;/p&gt;
    
    </summary>
    
      <category term="云服务器" scheme="http://49.234.121.116/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="云服务器" scheme="http://49.234.121.116/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Hexo+Github搭建起属于你的博客</title>
    <link href="http://49.234.121.116/2019/05/31/lesson/"/>
    <id>http://49.234.121.116/2019/05/31/lesson/</id>
    <published>2019-05-31T12:49:22.000Z</published>
    <updated>2020-04-22T10:57:27.223Z</updated>
    
    <content type="html"><![CDATA[<p>就是本博客的搭建教程/笑</p><a id="more"></a><h3 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h3><p><strong>这个博客依赖于Github推出的Github Pages服务</strong></p><p><img src="/2019/05/31/lesson/github1.jpg" alt=""></p><p>Github Pages 是 Github 的静态页面托管服务。它设计的初衷是为了用户能够直接通过 Github 仓库来托管用户个人、组织或是项目的专属页面。</p><p><a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="noopener">Github Pages介绍</a></p><p>可以说相当于一个可直接用 git 管理内容的静态服务器，有许多人会用它来托管自己的个人博客（利用 Jekyll、Pelican 这一类静态页面生成工具，这里我们用的是hexo）或是在这上面发布自己的 HTML5 小游戏。当然这么好的东西也是有限制的。</p><p>Github Pages 的限制：</p><ul><li><p>仓库存储的所有文件不能超过 1 GB</p></li><li><p>页面的带宽限制是低于每月 100 GB 或是每月 100,000 次请求。</p></li><li><p>每小时最多只能部署 10 个静态网站。</p></li></ul><p>对于发布自己的简历或是部署自己的博客的这一类需求我想是不用担心这些限制的，如果真的不小心超了，Github 那边不会采取什么强制措施，而是会发一份邮件提醒你应该找一个更适合你的托管对象的服务。</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h4 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h4><p>先下载这个叫git的软件安装在自己的电脑上</p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载链接</a></p><p><strong>默认设置安装即可</strong></p><p>再安装这个环境node.js</p><p><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="noopener">32位下载链接</a><br><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="noopener">64位下载链接</a></p><p><strong>默认设置安装即可</strong></p><h4 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h4><p>两个都安装在完成后分别在cmd输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">npm -v</span><br><span class="line">git --<span class="keyword">version</span></span><br></pre></td></tr></table></figure><br>检查安装信息</p><h3 id="Github帐号注册与Github-Pages申请"><a href="#Github帐号注册与Github-Pages申请" class="headerlink" title="Github帐号注册与Github Pages申请"></a>Github帐号注册与Github Pages申请</h3><h4 id="Github帐号注册"><a href="#Github帐号注册" class="headerlink" title="Github帐号注册"></a>Github帐号注册</h4><p><a href="https://github.com/" target="_blank" rel="noopener">Github官网</a><br>注册很简单，这里就不说了</p><h4 id="Github-Pages申请"><a href="#Github-Pages申请" class="headerlink" title="Github Pages申请"></a>Github Pages申请</h4><p>登陆后新建一个repository<br>（在你头像旁边的+号里）</p><p>然后在Repository name下填写yourname.github.io</p><p><strong>（注意，这里的yourname一定是你的Github名称，不能随便取。你的Github名称叫tom,那么你的Repository name就是tom.github.io)</strong></p><p>点击界面右侧的Settings，你将会打开这个库的setting页面，向下拖动，直到看见GitHub Pages</p><p>点击Automatic page generator</p><p>Github将会自动替你创建出一个gh-pages的页面。 </p><h4 id="配置成功"><a href="#配置成功" class="headerlink" title="配置成功"></a>配置成功</h4><p>如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了！在浏览器输入yourname.github.io试试吧！（￣︶￣）↗　<br>如果yourname.github.io已经可以正常访问了，那么Github一侧的配置已经全部结束了。</p><p>界面如图<br><img src="/2019/05/31/lesson/531page.jpg" alt=""></p><p>——————————————<br>2019.5.31  21:52<br>先更到这吧<br>-——————————————<br>2019.6.1   12:27</p><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><h4 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h4><p>找个地方创建一个文件夹，重命名为<strong>你的博客名</strong><br>在cmd里依次输入</p><ul><li><p>D:(锁定路径，你的文件夹所在的硬盘)</p></li><li><p>cd /你的hexo文件夹路径（如/work/hexo）</p></li><li><p>npm install hexo-cli -g</p></li><li><p>npm install hexo –save</p></li></ul><p>输入hexo -v检查</p><p>出现如图的信息，则安装正确</p><p><img src="/2019/05/31/lesson/lesson61.png" alt=""></p><p>然后在你的博客文件夹里，右键<strong>git bash here</strong><br>依次执行输入<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">init</span></span><br><span class="line"><span class="attr">npm</span> <span class="string">install</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br></pre></td></tr></table></figure><br><strong>注意！耐心等待直到出现$ 符号，才可以执行下一条指令</strong></p><p><img src="/2019/05/31/lesson/lesson612.png" alt=""></p><p>等待完成后</p><p>再输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure></p><p><img src="/2019/05/31/lesson/lesson613.png" alt=""></p><p>并在浏览器里输入<br><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><h4 id="配置成功-1"><a href="#配置成功-1" class="headerlink" title="配置成功"></a>配置成功</h4><p>如图</p><p><img src="/2019/05/31/lesson/lesson614.jpg" alt=""></p><p>恭喜你，hexo安装完成!</p><p><img src="/2019/05/31/lesson/hhh61.jpg" alt=""></p><h3 id="搭建到Github-page上"><a href="#搭建到Github-page上" class="headerlink" title="搭建到Github page上"></a>搭建到Github page上</h3><h4 id="博客信息填写"><a href="#博客信息填写" class="headerlink" title="博客信息填写"></a>博客信息填写</h4><p>打开博客根目录里的_comfig.yml文件</p><p><img src="/2019/05/31/lesson/lesson615.png" alt=""></p><p>这个文件是博客配置文件，以后会经常用到</p><p><img src="/2019/05/31/lesson/61.png" alt=""></p><ul><li>第一个是你博客标题</li><li>第二个是子标题</li><li>第三个是描述</li><li>作者你自己定</li><li>语言为zh-CN<br><strong>注意！每个:后面要加一个空格</strong><br>找到如图的地方</li></ul><p><img src="/2019/05/31/lesson/612.png" alt=""></p><p>照我的填写，把wbqzsl换成你的<strong>博客名</strong></p><h4 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h4><p><strong>这决定着哪台电脑能够部署你的博客，不要随意透露你的密钥</strong></p><p>在博客目录git bash here</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"wbq"</span> <span class="comment">//你的博客名</span></span><br><span class="line">git config --global user<span class="selector-class">.email</span> <span class="string">"gdutxiaoxu@163.com"</span><span class="comment">//你的qq邮箱就行</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"gdutxiaoxu@163.com"</span> <span class="comment">//输入一个路径存储ssh密匙</span></span><br></pre></td></tr></table></figure><p>然后在你输入的路径下找到并打开.ssh</p><p>打开id_rsa.pub<br>然后拷贝里面的内容，别拷贝那两行注释</p><p>然后在Github里找到你的库-&gt;设置<br><img src="/2019/05/31/lesson/615.png" alt=""><br><img src="/2019/05/31/lesson/616.png" alt=""><br>题目随便，把密钥粘贴到内容里</p><p>然后在cmd里输入<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span>@<span class="keyword">github</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure></p><p>如图<br><img src="/2019/05/31/lesson/617.png" alt=""></p><p>恭喜！你的博客密钥配置完成！</p><h4 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h4><p>在你博客根目录里右键<br>git bash here<br>输入<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><br><img src="/2019/05/31/lesson/618.png" alt=""></p><p>耐心等待后<br>在浏览器输入 <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a></p><p>如果出现了你在本地调试中的页面</p><p>那么恭喜你！部署成功！</p><h3 id="博客写作"><a href="#博客写作" class="headerlink" title="博客写作"></a>博客写作</h3><p>经过了上面的操作，你已经可以从你的电脑上部署到博客文章了</p><h4 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h4><p>在你博客根目录里右键<br>git bash here<br>输入<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span>  <span class="string">"这是题目最好不要中文"</span></span><br></pre></td></tr></table></figure><br>那么在你的博客根目录的Source文件夹里，就会新建一个名字.md的文件<br><strong>（建议修改_config.yml配置文件post_asset_folder项为true。这会在你新建博客的时候新建一个同名文件夹，写博客需要的资源可以放进去）</strong></p><p>打开 文章名.md即可开始写作</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>在vs里，文件-&gt;高级保存选项<br><img src="/2019/05/31/lesson/619.png" alt=""><br>调成这样，不然中文显示乱码</p><p>文章格式<br><img src="/2019/05/31/lesson/320.png" alt=""></p><h4 id="生成并部署博客"><a href="#生成并部署博客" class="headerlink" title="生成并部署博客"></a>生成并部署博客</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p>耐心等待上传完成<br>访问 <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> 即可看到你写的博文<br>————————————<br>2019.6.1  13:52<br>现在相当于在互联网上有你的网站了<br>快去试试吧<br>下次更如何更换主题与美化博客<br>————————————<br>2019.7.18 18:43<br>接下来说如何美化你的博客</p><h3 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h3><h4 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h4><p>从这个网址选择你的主题<br>建议选择Next主题，比较稳定，功能也很多</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p><h4 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h4><p>然后下载该主题的Zip压缩包</p><p>解压后的文件夹放在博客文件夹的themes文件夹里</p><p>然后在博客文件夹的_config.yml文件中修改</p><p>如图</p><p><img src="/2019/05/31/lesson/718.png" alt=""></p><p><strong>(注意：你可以将主题文件夹重命名，如果它太长的话。只要你配置的与文件夹匹配，就不会有问题。)</strong><br><strong>(提示：在你下载并安装好主题后，可以先本地生成看一下，方便选择)</strong></p><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p>这里不同主题就不太一样了。我用的是Next主题，不过大多数主题配置都差不多。</p><p>无非就是插件和脚本的安装和开关</p><p>参考以下网站</p><p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a><br><a href="https://blog.csdn.net/sunshine940326/article/details/69933696" target="_blank" rel="noopener">hexo+next主题优化</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT 使用文档</a><br>这里主要说一下</p><ul><li>评论功能</li><li>live 2d </li><li>后续更新</li></ul><h5 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h5><p>现在用的多的是基于leancloud云的valine评论插件<br>就是我现在博客用的这个<br>首先<strong>在主题的配置文件_config.yml</strong>中找到Valine</p><p>如图</p><p><img src="/2019/05/31/lesson/191.png" alt=""><br>首先enable改成True</p><p>然后我们需要在leancloud注册一个帐号</p><p><a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud官网</a></p><p>登录后点击页面右上角的控制台，进去后点击创建应用，应用名称随便填(如valine)并创建，<br>之后将鼠标移到应用标签上并点击设置按钮<br>如图<br><img src="/2019/05/31/lesson/c4.png" alt=""><br>把APPID和KEY粘贴到下图对应位置<br><img src="/2019/05/31/lesson/c5.png" alt=""></p><p>然后打开设置 安全中心<br>如图<br><img src="/2019/05/31/lesson/b4.png" alt=""><br><img src="/2019/05/31/lesson/b5.png" alt=""><br>添加你的域名<br>现在应该是 你的名字.github.io<br><strong>以后买了域名记得回来添加</strong><br>如果不出意外的话，这些都完成后等个15分种<br>你部署一下评论就可以正常工作了<br>————————————<br>2019.7.18 20:01</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;就是本博客的搭建教程/笑&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://49.234.121.116/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://49.234.121.116/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>up主成长之路</title>
    <link href="http://49.234.121.116/2019/05/24/bili/"/>
    <id>http://49.234.121.116/2019/05/24/bili/</id>
    <published>2019-05-24T14:30:25.000Z</published>
    <updated>2020-04-22T10:56:29.742Z</updated>
    
    <content type="html"><![CDATA[<p>最近也一直在努力的做视频成为一个up呢<br><strong>这个链接里面有我做的一些视频</strong><br>制作不易，进来看看呗<br>~(￣▽￣)~*<br><a id="more"></a></p><iframe src="//player.bilibili.com/player.html?aid=53326686&cid=93296156&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=40811392&cid=71673497&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=45248204&cid=79220893&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近也一直在努力的做视频成为一个up呢&lt;br&gt;&lt;strong&gt;这个链接里面有我做的一些视频&lt;/strong&gt;&lt;br&gt;制作不易，进来看看呗&lt;br&gt;~(￣▽￣)~*&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活记录" scheme="http://49.234.121.116/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="生活记录" scheme="http://49.234.121.116/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>sfml图形库的配置</title>
    <link href="http://49.234.121.116/2019/05/24/c/"/>
    <id>http://49.234.121.116/2019/05/24/c/</id>
    <published>2019-05-24T09:28:30.000Z</published>
    <updated>2020-05-14T01:21:23.727Z</updated>
    
    <content type="html"><![CDATA[<p>好久没更新了<br>前一段时间在学sfml图形库（c++）的使用<br>包括环境的配置,窗口的建立等<br>其简单的易懂的代码语法设计可以说是对入门新手的福音</p><p><img src="/2019/05/24/c/sfmmmm.png" alt=""></p><a id="more"></a><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=526646591&auto=0&height=66"></iframe><br>其实对于环境的配置，官网上的说明已经很明白了</p><p><a href="https://www.sfml-dev.org/download/sfml/2.5.1/" target="_blank" rel="noopener">官网链接</a></p><p>就算官网需要翻墙，还用很多国内大佬的解释也很清楚</p><p><a href="https://www.cnblogs.com/flowingwind/p/8284579.html" target="_blank" rel="noopener">VS2017编译SFML SDK配制环境详解</a></p><p>所以我这里就补充几条常见的问题吧</p><p>首先，你会看到如果你下载SFML的与你的Visual C ++版本是对应的（一般都是对应的）<br>你可以完全忽略介绍中对于”自己构建SFML“的教程<br>因为那对于初学者确实有点困难</p><p>第二点，建议使用×64的版本<br>这点我想我就不用多说了<br>64位基本完全兼容32位<br>可以避免很多不必要的麻烦</p><p>第三点，关于初始的大绿球的代码<br>  <pre><code> #include &lt;SFML/Graphics.hpp&gt;   //不解释，目前只需要包含图像部分就行了。<br>               int main()                                 </code></pre></p><pre><code>{ sf::RenderWindow window(sf::VideoMode(800, 600), &quot;SFML Application&quot;);     //对新建窗口的封装，第一个参数是一个VideoMode，表示窗口大小，第二个表示窗口标题 sf::CircleShape shape;                                                    //目前的物体，一个圆，暂时把他当成精灵就行了。 shape.setPosition(400, 300); shape.setRadius(40.0f); shape.setFillColor(sf::Color::Cyan); while (window.isOpen()){                                                  //不断执行这个循环 sf::Event event; while (window.pollEvent(event)){                                      //sfml中的事件，每次读取窗口的事件。 if (event.type == sf::Event::Closed)                              //关闭事件，也就是按了窗口上的叉叉  window.close(); if (event.type == sf::Event::KeyPressed){                         //按键事件 if (event.key.code == sf::Keyboard::Escape)                   //如果按了esc，也是关闭的效果  window.close(); }//end if }//end while window.clear();                                                       //每次清屏 window.draw(shape);                                                   //东西还是要画的 window.display();                                                     //画完之后还是要显示的 }                                                                    //end while return 0; }</code></pre><p><br>记得一定要把bin文件夹的dll文件放到exe文件的根目录里哟，我一般都放上（指不定用上哪个）</p><p>最后再说一个我最近碰到的小问题<br>在引用声效时<br>Failed to open sound file “resources/1.wav” (couldn’t open stream)<br>这是在VS里编译的时候DOS窗口出现的提示<br>不要慌，只是在VS里调试时候才会出现<br>直接从外部打开EXE文件就不会出现此提示了<br>个人认为是VS的访问权限及安全保护问题引发的</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好久没更新了&lt;br&gt;前一段时间在学sfml图形库（c++）的使用&lt;br&gt;包括环境的配置,窗口的建立等&lt;br&gt;其简单的易懂的代码语法设计可以说是对入门新手的福音&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/05/24/c/sfmmmm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="c++" scheme="http://49.234.121.116/categories/c/"/>
    
    
      <category term="c++" scheme="http://49.234.121.116/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>腾讯QQ历年新春活动回顾</title>
    <link href="http://49.234.121.116/2019/01/28/xiaonian/"/>
    <id>http://49.234.121.116/2019/01/28/xiaonian/</id>
    <published>2019-01-28T13:13:27.000Z</published>
    <updated>2020-04-22T10:59:53.868Z</updated>
    
    <content type="html"><![CDATA[<p>今天是传统的小年，意味着新年即将开始。今天，腾讯QQ正式推出了福袋活动，同时也将三款新春小游戏作为活动的一部分发布了出来。</p><p>  此活动将从小年夜（1月28日）持续到大年初三（2月7日）。期间，用户打开手机QQ，即可进入相关活动。进入活动之后，用户可以获得“福袋”，将福袋分享给亲朋好友之后，可以解锁现金红包或者卡券宝箱。<br><a id="more"></a><br>  上面是官方发布的游戏方法<br>  <img src="/2019/01/28/xiaonian/1.png" alt=""><br>  <img src="/2019/01/28/xiaonian/2.png" alt=""><br>  <img src="/2019/01/28/xiaonian/3.png" alt=""><br>  我们来回想一下前几年腾讯QQ发布的新年活动<br>  2015，2016：虚拟“红包”展露头角。基于微信与手Q两大社交平台，腾讯整合联动旗下全平台资源，包括腾讯新闻、腾讯游戏、腾讯开放平台、理财通、QQ浏览器等，实现全覆盖。这两年，用户使用的是下拉消息框来实现“抢”红包。</p><p>  2017：LBS+AR天降红包 2016是虚拟现实元年，而LBS位置服务在2016年也在国外闪亮登场（如精灵宝可梦）。这两者结合后，在当年引起了不小的关注</p><p>  2018：“走运”红包 过年期间从除夕到初三每走100步可以抽取一个红包，每天最多可以抽取100次，10000步封顶。这其实是通过更健康的过年方式带动运动量的提高，同时也可得红包。（幸亏是100步（滑稽））</p><p>  总体来看，腾讯QQ新春活动往往与当年腾讯的工作重点是联系的。那么今年的通过游戏与社交来获得红包的方式，是不是也意味着今年腾讯会把更多的精力投入到游戏，尤其是社交游戏上来。</p><p>  而值得注意的是，今年腾讯推出的三款小游戏，质量十分高，面向对象主要是年轻人。那么通过年轻人的消费水平来看，腾讯以后可能会推出一些玩法非常“公平”，注重竞争与社交的游戏。也就是说不会在游戏平衡上让玩家“氪金”，而更多的通过一些张扬个性（如皮肤）的方面让玩家“充钱”。（不要老说腾讯黑心，一个企业如果不想着怎么盈利，那倒闭算了）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是传统的小年，意味着新年即将开始。今天，腾讯QQ正式推出了福袋活动，同时也将三款新春小游戏作为活动的一部分发布了出来。&lt;/p&gt;
&lt;p&gt;  此活动将从小年夜（1月28日）持续到大年初三（2月7日）。期间，用户打开手机QQ，即可进入相关活动。进入活动之后，用户可以获得“福袋”，将福袋分享给亲朋好友之后，可以解锁现金红包或者卡券宝箱。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活记录" scheme="http://49.234.121.116/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="生活记录" scheme="http://49.234.121.116/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>bug大清理，第二次更新</title>
    <link href="http://49.234.121.116/2019/01/07/bug-clean/"/>
    <id>http://49.234.121.116/2019/01/07/bug-clean/</id>
    <published>2019-01-07T11:33:33.000Z</published>
    <updated>2020-04-22T10:56:57.283Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=496869422&auto=0&height=66"></iframe><br>经过了一天的测试，发现了不少的bug<br>评论被吃，加载出错…<br>有些是因为兼容性的原因，有些是因为云没有弄好<br>这次，小伙伴们被吃掉的评论可以看到了！<br><a id="more"></a></p><p>我也又加了许多功能（￣︶￣）↗　</p><p>1.实现fork me on github<br>2.实现点击出现桃心效果<br>3.侧边栏社交小图标<br>4.主页文章添加阴影效果<br>5.在网站底部加上访问量(不同于文章访问量)<br>6.添加“DaoVoice 在线联系“在右下角（测试，你可以联系我让我知道这个东西工不工作）<br>7.为博客加上萌萌的看板娘（欢迎调戏）<br>8.打赏功能（测试）<br>9.添加背景</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=496869422&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;经过了一天的测试，发现了不少的bug&lt;br&gt;评论被吃，加载出错…&lt;br&gt;有些是因为兼容性的原因，有些是因为云没有弄好&lt;br&gt;这次，小伙伴们被吃掉的评论可以看到了！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://49.234.121.116/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://49.234.121.116/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>第一次更新完成</title>
    <link href="http://49.234.121.116/2019/01/06/My-blog-2-0/"/>
    <id>http://49.234.121.116/2019/01/06/My-blog-2-0/</id>
    <published>2019-01-06T13:27:34.000Z</published>
    <updated>2020-04-22T10:57:39.272Z</updated>
    
    <content type="html"><![CDATA[<p>又捣鼓了一天，终于，把评论功能弄起来了。（此处应有掌声）<br>评论功能由无后台的Valine评论系统与leancloud云共同完成<br>还顺带装上了网易云的音乐插件和访客统计功能<br>换了个更简洁的主题<br>欢迎吐槽，收藏（话说我是不是该搞个点赞功能）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又捣鼓了一天，终于，把评论功能弄起来了。（此处应有掌声）&lt;br&gt;评论功能由无后台的Valine评论系统与leancloud云共同完成&lt;br&gt;还顺带装上了网易云的音乐插件和访客统计功能&lt;br&gt;换了个更简洁的主题&lt;br&gt;欢迎吐槽，收藏（话说我是不是该搞个点赞功能）&lt;/p&gt;

      
    
    </summary>
    
      <category term="博客搭建" scheme="http://49.234.121.116/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://49.234.121.116/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>world</title>
    <link href="http://49.234.121.116/2019/01/05/world/"/>
    <id>http://49.234.121.116/2019/01/05/world/</id>
    <published>2019-01-05T11:20:58.000Z</published>
    <updated>2020-04-22T10:59:39.699Z</updated>
    
    <content type="html"><![CDATA[<p> 欢迎你访问我的博客<br> 忙了一整天，终于把这个博客整出来了（感谢SomeQ的指导）<br> 这个博客是通过hexo框架部署在GitHub上的，以后将会实现更多功能。<br> 也算是在互联网有了真正属于自己的一个小天地吧（￣︶￣）↗　<br> 希望大家以后常来看看；我将在这里更新很多有趣的事情的<br> 主要是围绕着游戏开发的一些想法和游戏开发日志什么的<br> Hello World！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 欢迎你访问我的博客&lt;br&gt; 忙了一整天，终于把这个博客整出来了（感谢SomeQ的指导）&lt;br&gt; 这个博客是通过hexo框架部署在GitHub上的，以后将会实现更多功能。&lt;br&gt; 也算是在互联网有了真正属于自己的一个小天地吧（￣︶￣）↗　&lt;br&gt; 希望大家以后常来看看；我将
      
    
    </summary>
    
      <category term="博客搭建" scheme="http://49.234.121.116/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://49.234.121.116/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
