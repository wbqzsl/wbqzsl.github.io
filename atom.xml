<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wbq&#39;s Blog</title>
  
  <subtitle>Hello World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wbqzsl.github.io/"/>
  <updated>2020-04-21T14:28:49.044Z</updated>
  <id>http://wbqzsl.github.io/</id>
  
  <author>
    <name>wbq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腾讯云ubuntu18.04的图形化界面安装，桌面的远程链接，mysql的安装与远程链接</title>
    <link href="http://wbqzsl.github.io/2020/04/21/study2020421/"/>
    <id>http://wbqzsl.github.io/2020/04/21/study2020421/</id>
    <published>2020-04-21T11:55:50.000Z</published>
    <updated>2020-04-21T14:28:49.044Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=507585220&auto=0&height=66"></iframe><p>愿世界疫情好转，放下偏见，打造人类命运共同体。<br><a id="more"></a></p><h2 id="世界加油"><a href="#世界加油" class="headerlink" title="世界加油"></a>世界加油</h2><iframe src="//player.bilibili.com/player.html?aid=87086471&bvid=BV1V7411h78d&cid=148816107&page=1" scrolling="no" border="0" width="650" height="454" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>现在是2020年4月21号，我们还没有开学。在哈尔滨又出现了聚集性病例。在过去的三个月里，我们见证了世界自二战以来最大的动荡，全中国十亿人宅家两个月，美股数次熔断，高考七月举行，奥运会奇数年召开，英国正式脱欧，中国十天建成一座医院，耶路撒冷圣墓教堂关闭。。。历史将走向何处，没有人知道。<br>但看到那无数挺身而出的医生，军人，工人。。。看到我们祖国的“饱和式驰援”。我相信，我们一定会胜利的！</p><h2 id="图形化界面的安装，桌面的远程链接"><a href="#图形化界面的安装，桌面的远程链接" class="headerlink" title="图形化界面的安装，桌面的远程链接"></a>图形化界面的安装，桌面的远程链接</h2><p>图形化界面和桌面其实概念有细微的差别。</p><p>桌面的概念比较窄，他是属于图形化界面的一种。</p><p>而只要以图形的形式展现在用户眼前的都叫图形化界面</p><p>比如这个</p><p><img src="/2020/04/21/study2020421/clock.png" alt=""></p><p>它就是个图形化界面</p><p>我们通过xclock这一命令打开的它<br>但我们不能通过图形化的方式来通过它来打开另一个软件<br>比如我们再想要打开firefox浏览器<br>我们就只能再输firefox代码，没有那种点点点的快感</p><p>这时候我们就需要桌面这个图形化界面了</p><p>比如喜闻乐见的windows桌面<br><img src="/2020/04/21/study2020421/1.png" alt=""></p><p>想点哪里点哪里，巨爽无比</p><p>事实上，我们使用apt-get install xxx桌面 时，他就会自动把依赖的图形化界面环境安上</p><p>你可以在确认时，仔细阅读它的依赖项来确认</p><h3 id="建议只安装一个桌面"><a href="#建议只安装一个桌面" class="headerlink" title="建议只安装一个桌面"></a>建议只安装一个桌面</h3><p>现在网上有很多教程的是安装gnome桌面，由于我们下面要用vncserver远程链接，所以这里<strong>强烈不推荐安装</strong>。（真实踩坑，卸都卸不干净，vnc也可能有问题，搞得我重装系统）</p><h3 id="建议安装xfce4桌面"><a href="#建议安装xfce4桌面" class="headerlink" title="建议安装xfce4桌面"></a>建议安装xfce4桌面</h3><p>安装前确认软件列表最新</p><pre><code>apt-get update</code></pre><p>安装xfce4</p><pre><code>sudo apt install xfce4 xfce4-goodies </code></pre><p>等他安好了，如果你通过终端肯定是看不到你的图形化界面的</p><p>所幸腾讯云提供了vnc的登录方式</p><p><img src="/2020/04/21/study2020421/2.png" alt=""></p><p>登上去以后</p><pre><code>startx</code></pre><p><img src="/2020/04/21/study2020421/3.png" alt=""><br>看到那只小老鼠了吗？哈哈哈</p><p>vnc登录有概率失败，不要慌，重试几次就好了</p><h3 id="以非root用户安装vnc4server远程链接桌面"><a href="#以非root用户安装vnc4server远程链接桌面" class="headerlink" title="以非root用户安装vnc4server远程链接桌面"></a>以非root用户安装vnc4server远程链接桌面</h3><p>每次打开控制台太麻烦了<br>我们想在手机，电脑，随时随地看到并操控我们的桌面</p><p><strong>怎么办呢？</strong></p><p>这里我们使用vncsever的方式</p><p>这里安装的是vnc4server，网上有些教程用的是tigervncserver，需要修改一堆配置文件，配置繁琐。<strong>且本人踩坑未能实现。</strong></p><p>安装vnc4server（以非root用户安装！以非root用户安装！以非root用户安装！不然会错）</p><pre><code>sudo apt-get install vnc4server</code></pre><p>以下操作全是以非root用户操作</p><h4 id="配置密码"><a href="#配置密码" class="headerlink" title="配置密码"></a>配置密码</h4><pre><code>vnc4passwd//最多8位，多了只保存前8位</code></pre><h4 id="启动服务，使系统自动生成xstartup配置文件"><a href="#启动服务，使系统自动生成xstartup配置文件" class="headerlink" title="启动服务，使系统自动生成xstartup配置文件"></a>启动服务，使系统自动生成xstartup配置文件</h4><pre><code>vnc4server :2</code></pre><h4 id="停止服务，修改配置文件"><a href="#停止服务，修改配置文件" class="headerlink" title="停止服务，修改配置文件"></a>停止服务，修改配置文件</h4><pre><code>vnc4server -kill :2</code></pre><h4 id="修改-vnc-xstartup配置文件"><a href="#修改-vnc-xstartup配置文件" class="headerlink" title="修改~/.vnc/xstartup配置文件"></a>修改~/.vnc/xstartup配置文件</h4><p><img src="/2020/04/21/study2020421/4.png" alt=""><br><strong>从注释看到我那悲惨的踩坑痕迹了吗5555555</strong></p><p>代码如下<br>unset SESSION_MANAGER<br>unset DBUS_SESSION_BUS_ADDRESS<br>startxfce4 &amp;<br>大意是选择xfce4桌面作为展示桌面</p><h4 id="正式启动服务"><a href="#正式启动服务" class="headerlink" title="正式启动服务"></a>正式启动服务</h4><pre><code>vnc4server -geometry 1920x1080 :2</code></pre><h3 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h3><p>以下操作可以由root用户操作</p><p>关闭防火墙<br>    iptables -F //清空规则，慎用<br>    ntsysv || service iptables stop //两个选一个，停止防火墙<br>关闭ufw<br> sudo ufw disable</p><p><strong>腾讯云安全组放开0.0.0.0/0的TCP:5901和TCP:5902端口</strong></p><p><img src="/2020/04/21/study2020421/5.png" alt=""></p><h3 id="本地和手机安装vncviewer"><a href="#本地和手机安装vncviewer" class="headerlink" title="本地和手机安装vncviewer"></a>本地和手机安装vncviewer</h3><p>下载地址：<br><a href="https://www.realvnc.com/en/connect/" target="_blank" rel="noopener">https://www.realvnc.com/en/connect/</a></p><p>安装后输入你的host地址:5902<br>如114.114.114.114:5902<br>再输入你设置的密码，就可了<br><img src="/2020/04/21/study2020421/6.png" alt=""><br>这里安全提示，我们contiue就行</p><h3 id="可能的bug（真实踩坑）"><a href="#可能的bug（真实踩坑）" class="headerlink" title="可能的bug（真实踩坑）"></a>可能的bug（真实踩坑）</h3><ul><li><p>如果能输入密码，但链接后出现黑屏左上角有三个勾选框，或链接后鼠标变成x型，花屏或白屏。</p><p>请检查你的xstartup文件，这是vncserver无法正确配置图形文件</p></li></ul><ul><li><p>如果出现链接出现 connect:Connection refused(10061)</p><p>请检查你的服务是否启动<br>  netstat -tlup | grep vnc<br>检查端口是否输入正确<br>检查自己系统的配置</p></li></ul><ul><li><p>如果出现链接出现 connect:Connection refused(10060)</p><p>检查你的防火墙设置，与腾讯云的安全组配置</p></li><li><p>有时会提示太多访问，然后拒绝你的链接</p><p>这是因为黑客导致的，重启vncserver服务就可</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=507585220&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;愿世界疫情好转，放下偏见，打造人类命运共同体。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sql语句，初学云服务器，及http服务学习</title>
    <link href="http://wbqzsl.github.io/2019/11/19/study/"/>
    <id>http://wbqzsl.github.io/2019/11/19/study/</id>
    <published>2019-11-19T08:07:20.000Z</published>
    <updated>2020-04-21T12:05:11.499Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29717114&auto=0&height=66"></iframe><p>空余时间自己学的一些东西，记录一下。</p><p>目前有Mysql，前端，和云服务器管理</p><a id="more"></a><h2 id="关于MySQL"><a href="#关于MySQL" class="headerlink" title="关于MySQL"></a>关于MySQL</h2><h3 id="列出"><a href="#列出" class="headerlink" title="列出"></a>列出</h3><p>show databases </p><p>show create database database-name ;</p><p>show tables；</p><p>show create table tablename ;</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>CREATE DATABASE database-name if not exists;</p><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>drop database dbname if exists;</p><h3 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h3><p>use database-name</p><h4 id="查询正在使用的数据库名"><a href="#查询正在使用的数据库名" class="headerlink" title="查询正在使用的数据库名"></a>查询正在使用的数据库名</h4><p>select database()</p><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><h4 id="修改数据库的名称"><a href="#修改数据库的名称" class="headerlink" title="修改数据库的名称"></a>修改数据库的名称</h4><p>sp_renamedb ‘old_name’, ‘new_name’;</p><h4 id="修改数据库的字符集"><a href="#修改数据库的字符集" class="headerlink" title="修改数据库的字符集"></a>修改数据库的字符集</h4><p>alter database database-name character set 字符集名称</p><h3 id="创建新表"><a href="#创建新表" class="headerlink" title="创建新表"></a>创建新表</h3><p>create table name(列名 类型，列名2 类型2 ,..)</p><h4 id="根据已有的表创建新表："><a href="#根据已有的表创建新表：" class="headerlink" title="根据已有的表创建新表："></a>根据已有的表创建新表：</h4><p>create table tab_new like tab_old (使用旧表创建新表)</p><h3 id="查询表"><a href="#查询表" class="headerlink" title="查询表"></a>查询表</h3><p>show tables –查询表</p><p>desc tablename –查询表结构</p><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><p>drop table tablename if exits;</p><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><h4 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h4><p>alter table 表名 rename to 新表名</p><h4 id="修改字符集名称"><a href="#修改字符集名称" class="headerlink" title="修改字符集名称"></a>修改字符集名称</h4><p>alter table 表名 character set 字符集名称</p><h4 id="增加列"><a href="#增加列" class="headerlink" title="增加列"></a>增加列</h4><p>alter table 表名 add 列名 数据类型</p><p>A：alter table 表名 change 列名 新列名 新数据类型</p><p>B：alter table 表名 modify 列名 新数据类型</p><h4 id="增加列-1"><a href="#增加列-1" class="headerlink" title="增加列"></a>增加列</h4><p>alter table stu drop sex;</p><h3 id="添加主键"><a href="#添加主键" class="headerlink" title="添加主键"></a>添加主键</h3><p>Alter table tabname add primary key(列名)</p><h3 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h3><p>Alter table tabname drop primary key(列名)</p><h3 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h3><p>选择：select * from table1 where 范围</p><p>插入：insert into table1(field1,field2) values(value1,value2)</p><p>删除：delete from table1 where 范围</p><p>更新：update table1 set field1=value1 where 范围</p><p>查找：select * from table1 where field1 like ’%value1%’   注意 _ 和 % </p><p>排序：select * from table1 order by field1,field2 [desc]</p><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p>总数：select count() as totalcount from table1</p><p>求和：select sum(field1) as sumvalue from table1</p><p>平均：select avg(field1) as avgvalue from table1</p><p>最大：select max(field1) as maxvalue from table1</p><p>最小：select min(field1) as minvalue from table1</p><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p>Group by</p><p>Select sex AVG(math),Count(id) from student Where math &gt; 70 Group by sex Having count(id&gt;2)</p><p>一张表，一旦分组完成后，查询后只能得到组相关的信息。</p><p>在SQLServer中分组时：不能以text,ntext,image类型的字段作为分组依据</p><p>注意：</p><p>1.分组之后查询的字段：<br>    分组字段，聚合函数</p><p>2.where和having的区别</p><pre><code>where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来</code></pre><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p>limit（MySQL方言）</p><p>select * from student limit 0,3;  –第一页</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><strong>&gt;</strong><br><strong>&lt;</strong><br><strong>=</strong><br><strong>&lt;=</strong><br><strong>&gt;=</strong><br><strong>&lt;&gt; !=</strong> –不等于<br><strong>LIKE</strong><br><strong>IS NULL</strong> –判断NULL不能用＝NULL<br><strong>and &amp;&amp;</strong><br><strong>or ||</strong><br><strong>not !</strong><br><strong>IN(集合)</strong><br><strong>BETWEEN….AND</strong></p><h4 id="between的用法"><a href="#between的用法" class="headerlink" title="between的用法"></a>between的用法</h4><p>between限制查询数据范围时包括了边界值,not between不包括</p><p>select * from table1 where time between time1 and time2</p><p>select a,b,c, from table1 where a not between 数值1 and 数值2</p><h4 id="in-的使用方法"><a href="#in-的使用方法" class="headerlink" title="in 的使用方法"></a>in 的使用方法</h4><p>select * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)</p><h2 id="关于前端"><a href="#关于前端" class="headerlink" title="关于前端"></a>关于前端</h2><p>稍微学习了一下html<br>果然是标识语言，真的很好理解</p><h3 id="html基本框架"><a href="#html基本框架" class="headerlink" title="html基本框架"></a>html基本框架</h3><p>一个基本框架就是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"关键词，关键字"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"描述信息"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>你的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>music类</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span> = “music”&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure><p>这就是<body>里的组成部分，也是网页设计的主体<script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"debug":false,"model":{"jsonPath":"/live2dw/assets/miku.model.json"},"display":{"position":"right","width":110,"height":220},"mobile":{"show":true},"log":false});</script></body></p><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>对于</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span> = “music”&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure><p>可以用面向对象的思想去理解</p><p>然后用层叠样式表（css）来去表示颜色和大小还有属性等等。。。</p><p>位置写在head里，用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>“圈起来”</p><p>例如</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span>&#123;<span class="attribute">width</span>:<span class="number">720px</span>;<span class="attribute">height</span>:<span class="number">470px</span>;<span class="attribute">margin</span>:<span class="number">130px</span> auto;&#125;</span><br></pre></td></tr></table></figure><p>注意如果后面跟子类要加一个空格</p><p>例如<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span>&#123;<span class="attribute">width</span>:<span class="number">50%</span>;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="number">#59a2cc</span><span class="comment">/*#7ccaef*/</span>;<span class="attribute">float</span>:right;<span class="attribute">overflow-y</span>:auto;<span class="attribute">opacity</span>:<span class="number">0.6</span>&#125;</span><br></pre></td></tr></table></figure></p><h3 id="文本表示"><a href="#文本表示" class="headerlink" title="文本表示"></a>文本表示</h3><p>目前除列表我只知道这一种形式的表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"music"</span>&gt;</span><br><span class="line">&lt;h2&gt;首次加载歌曲时间可能较长,请等待<span class="number">15</span>秒左右&lt;<span class="regexp">/h2&gt;</span></span><br></pre></td></tr></table></figure><p>即属于music的文字</p><p>然后样式呢就用css层叠样式表写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_lrc</span> <span class="selector-tag">h2</span>&#123;<span class="attribute">height</span>:<span class="number">60px</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">text-align</span>:center;<span class="attribute">line-height</span>:<span class="number">60px</span>;<span class="attribute">opacity</span>:<span class="number">0.6</span>;<span class="attribute">color</span>:<span class="number">#000</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="图片表示"><a href="#图片表示" class="headerlink" title="图片表示"></a>图片表示</h3><p>同样，我只知道一种方式QAQ</p><p><strong>我真菜</strong></p><p>首先用url传，我估计无论什么方法应该都是</p><p>同样，在css里</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_lrc</span> <span class="selector-class">.m_con</span>&#123;<span class="attribute">height</span>:<span class="number">410px</span>;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">"images/6.gif"</span>);<span class="attribute">opacity</span>:<span class="number">0.6</span>;&#125;</span><br></pre></td></tr></table></figure><p>在background里写上url(相对路径)</p><p>就可以了</p><p>至于怎么调整效果，看着来就好了，毕竟从网上找到图片一般不可能那么正好</p><p>具体可以参考一下下面的这篇文章</p><p><a href="https://www.cnblogs.com/tugenhua0707/p/5260411.html" target="_blank" rel="noopener">这篇博文讲的很详细</a></p><h3 id="ul-li列表"><a href="#ul-li列表" class="headerlink" title="ul li列表"></a>ul li列表</h3><p>在一个类的下面<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><br>样式设置跟文字差不多</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">line-height</span>:<span class="number">38px</span>;<span class="attribute">padding-left</span>:<span class="number">18px</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#7d7d7d</span>;&#125;</span><br></pre></td></tr></table></figure><p>注意</p><ul><li><p>初始的时候这个列表是自带样式的，用这个关掉 list-style:none</p></li><li><p>如果添加的太多的话，会overflow</p></li></ul><p>要想加拉动条的话，得从它属于的类的css里加一个参数 overflow-y:auto; </p><p>如上例</p><p>需从m_list的css里添加 overflow-y:auto;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span>&#123;<span class="attribute">width</span>:<span class="number">50%</span>;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="number">#59a2cc</span><span class="comment">/*#7ccaef*/</span>;<span class="attribute">float</span>:right;<span class="attribute">overflow-y</span>:auto;<span class="attribute">opacity</span>:<span class="number">0.6</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>如果需要把鼠标移上去的反馈</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music</span> <span class="selector-class">.m_list</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">cursor</span>:pointer;<span class="attribute">background</span>:<span class="built_in">linear-gradient</span>(50deg,#dddcce,#00ccff,#fff);<span class="attribute">color</span>:<span class="number">#000</span>;<span class="attribute">transition</span>:<span class="number">0.2s</span>;&#125;</span><br></pre></td></tr></table></figure><p>cursor:pointer 移上变小手</p><p>linear-gradient 色彩渐变</p><p>transition:0.2s 延迟显示</p><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p>我也不是特别懂javaScript，就不说了</p><p>这是html引用的语法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//创建一个音乐播放器</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> audioDom = <span class="built_in">document</span>.createElement(<span class="string">"audio"</span>);</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">play</span><span class="params">(name)</span></span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">///设置音乐播放地址</span></span></span><br><span class="line"><span class="actionscript">audioDom.src = <span class="string">"mp3/"</span>+name+<span class="string">".mp3"</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//播放</span></span></span><br><span class="line"><span class="actionscript">audioDom.autoplay = <span class="string">"autoplay"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h3><p><a href="http://49.234.121.116" target="_blank" rel="noopener">87音乐播放器</a></p><p>做的一个小音乐播放器</p><p><img src="/2019/11/19/study/1.png" alt=""></p><p>是的，我把它放到服务器上了</p><p>用的云服务器，这就扯到另一块了</p><h2 id="关于云服务器"><a href="#关于云服务器" class="headerlink" title="关于云服务器"></a>关于云服务器</h2><h3 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h3><p>做完了那个小播放器，我就想把它让更多的人看见(<em>^_^</em>)<br>毕竟费了一番功夫<br>我就买了腾讯的云服务器<br><img src="/2019/11/19/study/云.png" alt=""><br>这里说一下，对比了其他的云服务提供商，还是腾讯的比较的靠谱</p><p>我真的是自来水，然后如果你是学生的话还有优惠，<strong>一个月只要10块钱</strong>。我就用的学生优惠，25以下还免认证<br> <img src="/2019/11/19/study/恰饭.png" alt=""></p><p><a href="https://cloud.tencent.com/act/cps/redirect?redirect=10004&amp;cps_key=2c553e3a03277b9a0cc24251ec595886" target="_blank" rel="noopener">点击这里购买学生优惠云服务器哟</a></p><p>操作系统我推荐ubuntu，我就用的这个。当然你要是对CentOS熟的话，用那个也无所谓</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>那么我们该怎样把一个做好的网站项目放到服务器让更多人看到呢？</p><p>服务器我们有了<br><img src="/2019/11/19/study/2.png" alt=""></p><p>这时候我们如果在我们电脑的浏览器直接输入我们服务器的ip的话，肯定显示不了什么东西。但是可以ping通。</p><p>这是为什么呢？</p><p>我们可以理解服务器为一台一直开着的电脑（买的时候也让你选操作系统了）那么如果这个电脑目前什么软件还没装，自然也实现不了功能。</p><p><strong>如果要实现网站访问，就必须给我们的服务器装对应的软件。</strong></p><p>这里，我用的是全世界应用最多的Web服务器软件之一 ——<strong>apache</strong></p><p><img src="/2019/11/19/study/3.png" alt=""></p><p>软件选好后，那我们就万事具备了。</p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>我们可以用终端访问云服务器</p><p>腾讯云有自带的控制台终端</p><p><img src="/2019/11/19/study/4.png" alt=""></p><p><img src="/2019/11/19/study/5.png" alt=""></p><p><strong>注意，你的服务器的初始用户的名称和密码以及公网IP都将通过腾讯云站内信的形式告诉你</strong></p><p>觉得初始密码麻烦可以登上去改一下</p><p>指令是<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ passwd</span><br><span class="line">Changing password <span class="keyword">for</span> abhishek.</span><br><span class="line">(current) UNIX <span class="string">password:</span> --现在的密码</span><br><span class="line">Enter <span class="keyword">new</span> UNIX <span class="string">password:</span> --（要设置的）新密码</span><br><span class="line">Retype <span class="keyword">new</span> UNIX <span class="string">password:</span> --重新输一遍新密码</span><br><span class="line"><span class="string">passwd:</span> password updated successfully</span><br></pre></td></tr></table></figure></p><p><strong>在键入密码时，你不会从屏幕上看到任何东西。这在 UNIX 和 Linux 系统中是非常正常的表现。</strong></p><p>我们也可以用Xshell软件来登陆，因为我们后期要传文件，所以还是装上Xshell吧</p><p>装上后直接新建一个会话，主机就写你的公网IP，端口一般都是22（你要是不改的话）</p><p><img src="/2019/11/19/study/7.png" alt=""></p><p>然后确认，链接，就会让弹出窗口让你输入用户名和密码</p><p>连接上就行了</p><p>为了方便，我们直接切换到<strong>root用户</strong>进行操作</p><p>（云服务器刚开始给你的是普通用户）</p><p>很显然你之前没有设置root用户</p><p>那么</p><p>sudo passwd root</p><p>输入你现在这个普通用户的密码</p><p>下面会提示你输入新的密码,请注意这个就是你的root密码,请输入两次一样的密码,然后会提示你password updated successfully</p><p>然后输入 su root</p><p>就可以通过root访问了</p><h3 id="各种安装"><a href="#各种安装" class="headerlink" title="各种安装"></a>各种安装</h3><p>我们直接快速安装apache</p><p>sudo apt-get install httpd</p><p>会出现一系列的服务器软件，其中就有我们的apache</p><p>sudo apt-get install apache2<br>sudo apt-get install apache2-dev</p><p>一路y,等读条完后</p><p>sudo systemctl status apache2</p><p>检查是否安装成功</p><p><img src="/2019/11/19/study/6.png" alt=""></p><p>跟上图一样的话，恭喜你，apache成功安装了。</p><p>这时候，我们可以</p><p>curl 127.0.0.1</p><p>就会接收到一堆html的代码</p><p>这就是初始欢迎页面的html代码</p><p><img src="/2019/11/19/study/29.jpg" alt=""></p><p>当然，如果我们有图形界面的话，在图形界面的浏览器输入这个127.0.0.1就会看到页面的样子了</p><p><img src="/2019/11/19/study/8.png" alt=""></p><p><strong>满足你们的好奇心</strong></p><h3 id="上传网页"><a href="#上传网页" class="headerlink" title="上传网页"></a>上传网页</h3><p>软件安好了</p><p>/var/www/html</p><p>是apache的默认发布路径</p><p>所以我们只需要上传我们的项目到这个文件夹就可以了</p><p>这里拿我的项目举例</p><p><img src="/2019/11/19/study/9.png" alt=""></p><p>我们把这个目录原封不动的搬运到/var/www/html目录下就行了</p><p>怎么运呢，<strong>rz</strong>指令</p><p>先安装一下</p><p>apt-get install lrzsz</p><p>我们输入rz</p><p>就会出现<br><img src="/2019/11/19/study/10.png" alt=""><br>选中传就行</p><p><strong>注意，遇到文件夹时，要先在/var/www/html新建一个。</strong><br>指令：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> 你的文件夹名称</span><br></pre></td></tr></table></figure></p><p>然后再cd进去传。传完了别忘了再cd ..出来**</p><p><strong>传错的话</strong><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rm</span> 文件名</span><br><span class="line"><span class="keyword">rm</span> -rf 文件夹</span><br></pre></td></tr></table></figure></p><p>接下来，不出意外的话———–你还是访问不了你的网页</p><p>为什么呢？</p><p>因为安全组</p><h3 id="安全组"><a href="#安全组" class="headerlink" title="安全组"></a>安全组</h3><p>这个东西是云服务器都有的<br>限制访问IP和端口以提高安全性</p><p><img src="/2019/11/19/study/11.png" alt=""></p><p>你可以按照腾讯云的提示做<br><a href="https://cloud.tencent.com/document/product/213/12452" target="_blank" rel="noopener">安全组帮助文档</a></p><p>也可以跟我一样，放开所有端口就完了</p><p>设置完保存后，在浏览器输入http://你的公网IP，就可以看到你的网页内容了！</p><p><strong>注意，好像不支持https访问，所以要用http。而很多浏览器可能默认https，所以你得手动输入</strong></p><h3 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h3><p>都完成后，就可以访问你的网页啦！</p><p><strong>注意！</strong><br><strong>注意！</strong><br><strong>注意！</strong></p><p>为了规范互联网信息服务活动，促进互联网信息服务健康有序发展，<br>根据国务院令第 292 号《互联网信息服务管理办法》和工信部令第 33 号《非经营性互联网信息服务备案管理办法》规定，<br>国家对经营性互联网信息服务实行许可制度，对非经营性互联网信息服务实行备案制度。<br>未取得许可或者未履行备案手续的，不得从事互联网信息服务，否则就属于违法行为。</p><p>所以，完成这些后一定要先备案呀！</p><p>而且没那么麻烦<br>现在方便很多了</p><p><a href="https://cloud.tencent.com/document/product/213/12452" target="_blank" rel="noopener">腾讯云备案链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=29717114&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;空余时间自己学的一些东西，记录一下。&lt;/p&gt;
&lt;p&gt;目前有Mysql，前端，和云服务器管理&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习日志" scheme="http://wbqzsl.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Hexo+Github搭建起属于你的博客</title>
    <link href="http://wbqzsl.github.io/2019/05/31/lesson/"/>
    <id>http://wbqzsl.github.io/2019/05/31/lesson/</id>
    <published>2019-05-31T12:49:22.000Z</published>
    <updated>2019-07-18T12:01:47.166Z</updated>
    
    <content type="html"><![CDATA[<p>就是本博客的搭建教程/笑</p><a id="more"></a><h3 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h3><p><strong>这个博客依赖于Github推出的Github Pages服务</strong></p><p><img src="/2019/05/31/lesson/github1.jpg" alt=""></p><p>Github Pages 是 Github 的静态页面托管服务。它设计的初衷是为了用户能够直接通过 Github 仓库来托管用户个人、组织或是项目的专属页面。</p><p><a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="noopener">Github Pages介绍</a></p><p>可以说相当于一个可直接用 git 管理内容的静态服务器，有许多人会用它来托管自己的个人博客（利用 Jekyll、Pelican 这一类静态页面生成工具，这里我们用的是hexo）或是在这上面发布自己的 HTML5 小游戏。当然这么好的东西也是有限制的。</p><p>Github Pages 的限制：</p><ul><li><p>仓库存储的所有文件不能超过 1 GB</p></li><li><p>页面的带宽限制是低于每月 100 GB 或是每月 100,000 次请求。</p></li><li><p>每小时最多只能部署 10 个静态网站。</p></li></ul><p>对于发布自己的简历或是部署自己的博客的这一类需求我想是不用担心这些限制的，如果真的不小心超了，Github 那边不会采取什么强制措施，而是会发一份邮件提醒你应该找一个更适合你的托管对象的服务。</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h4 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h4><p>先下载这个叫git的软件安装在自己的电脑上</p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载链接</a></p><p><strong>默认设置安装即可</strong></p><p>再安装这个环境node.js</p><p><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="noopener">32位下载链接</a><br><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="noopener">64位下载链接</a></p><p><strong>默认设置安装即可</strong></p><h4 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h4><p>两个都安装在完成后分别在cmd输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">npm -v</span><br><span class="line">git --<span class="keyword">version</span></span><br></pre></td></tr></table></figure><br>检查安装信息</p><h3 id="Github帐号注册与Github-Pages申请"><a href="#Github帐号注册与Github-Pages申请" class="headerlink" title="Github帐号注册与Github Pages申请"></a>Github帐号注册与Github Pages申请</h3><h4 id="Github帐号注册"><a href="#Github帐号注册" class="headerlink" title="Github帐号注册"></a>Github帐号注册</h4><p><a href="https://github.com/" target="_blank" rel="noopener">Github官网</a><br>注册很简单，这里就不说了</p><h4 id="Github-Pages申请"><a href="#Github-Pages申请" class="headerlink" title="Github Pages申请"></a>Github Pages申请</h4><p>登陆后新建一个repository<br>（在你头像旁边的+号里）</p><p>然后在Repository name下填写yourname.github.io</p><p><strong>（注意，这里的yourname一定是你的Github名称，不能随便取。你的Github名称叫tom,那么你的Repository name就是tom.github.io)</strong></p><p>点击界面右侧的Settings，你将会打开这个库的setting页面，向下拖动，直到看见GitHub Pages</p><p>点击Automatic page generator</p><p>Github将会自动替你创建出一个gh-pages的页面。 </p><h4 id="配置成功"><a href="#配置成功" class="headerlink" title="配置成功"></a>配置成功</h4><p>如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了！在浏览器输入yourname.github.io试试吧！（￣︶￣）↗　<br>如果yourname.github.io已经可以正常访问了，那么Github一侧的配置已经全部结束了。</p><p>界面如图<br><img src="/2019/05/31/lesson/531page.jpg" alt=""></p><p>——————————————<br>2019.5.31  21:52<br>先更到这吧<br>-——————————————<br>2019.6.1   12:27</p><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><h4 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h4><p>找个地方创建一个文件夹，重命名为<strong>你的博客名</strong><br>在cmd里依次输入</p><ul><li><p>D:(锁定路径，你的文件夹所在的硬盘)</p></li><li><p>cd /你的hexo文件夹路径（如/work/hexo）</p></li><li><p>npm install hexo-cli -g</p></li><li><p>npm install hexo –save</p></li></ul><p>输入hexo -v检查</p><p>出现如图的信息，则安装正确</p><p><img src="/2019/05/31/lesson/lesson61.png" alt=""></p><p>然后在你的博客文件夹里，右键<strong>git bash here</strong><br>依次执行输入<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm <span class="keyword">install</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><br><strong>注意！耐心等待直到出现$ 符号，才可以执行下一条指令</strong></p><p><img src="/2019/05/31/lesson/lesson612.png" alt=""></p><p>等待完成后</p><p>再输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure></p><p><img src="/2019/05/31/lesson/lesson613.png" alt=""></p><p>并在浏览器里输入<br><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><h4 id="配置成功-1"><a href="#配置成功-1" class="headerlink" title="配置成功"></a>配置成功</h4><p>如图</p><p><img src="/2019/05/31/lesson/lesson614.jpg" alt=""></p><p>恭喜你，hexo安装完成!</p><p><img src="/2019/05/31/lesson/hhh61.jpg" alt=""></p><h3 id="搭建到Github-page上"><a href="#搭建到Github-page上" class="headerlink" title="搭建到Github page上"></a>搭建到Github page上</h3><h4 id="博客信息填写"><a href="#博客信息填写" class="headerlink" title="博客信息填写"></a>博客信息填写</h4><p>打开博客根目录里的_comfig.yml文件</p><p><img src="/2019/05/31/lesson/lesson615.png" alt=""></p><p>这个文件是博客配置文件，以后会经常用到</p><p><img src="/2019/05/31/lesson/61.png" alt=""></p><ul><li>第一个是你博客标题</li><li>第二个是子标题</li><li>第三个是描述</li><li>作者你自己定</li><li>语言为zh-CN<br><strong>注意！每个:后面要加一个空格</strong><br>找到如图的地方</li></ul><p><img src="/2019/05/31/lesson/612.png" alt=""></p><p>照我的填写，把wbqzsl换成你的<strong>博客名</strong></p><h4 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h4><p><strong>这决定着哪台电脑能够部署你的博客，不要随意透露你的密钥</strong></p><p>在博客目录git bash here</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"wbq"</span> <span class="comment">//你的博客名</span></span><br><span class="line">git config --global user<span class="selector-class">.email</span> <span class="string">"gdutxiaoxu@163.com"</span><span class="comment">//你的qq邮箱就行</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"gdutxiaoxu@163.com"</span> <span class="comment">//输入一个路径存储ssh密匙</span></span><br></pre></td></tr></table></figure><p>然后在你输入的路径下找到并打开.ssh</p><p>打开id_rsa.pub<br>然后拷贝里面的内容，别拷贝那两行注释</p><p>然后在Github里找到你的库-&gt;设置<br><img src="/2019/05/31/lesson/615.png" alt=""><br><img src="/2019/05/31/lesson/616.png" alt=""><br>题目随便，把密钥粘贴到内容里</p><p>然后在cmd里输入<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-T</span> <span class="selector-tag">git</span>@<span class="keyword">github</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure></p><p>如图<br><img src="/2019/05/31/lesson/617.png" alt=""></p><p>恭喜！你的博客密钥配置完成！</p><h4 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h4><p>在你博客根目录里右键<br>git bash here<br>输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><br><img src="/2019/05/31/lesson/618.png" alt=""></p><p>耐心等待后<br>在浏览器输入 <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a></p><p>如果出现了你在本地调试中的页面</p><p>那么恭喜你！部署成功！</p><h3 id="博客写作"><a href="#博客写作" class="headerlink" title="博客写作"></a>博客写作</h3><p>经过了上面的操作，你已经可以从你的电脑上部署到博客文章了</p><h4 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h4><p>在你博客根目录里右键<br>git bash here<br>输入<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span>  <span class="string">"这是题目最好不要中文"</span></span><br></pre></td></tr></table></figure><br>那么在你的博客根目录的Source文件夹里，就会新建一个名字.md的文件<br><strong>（建议修改_config.yml配置文件post_asset_folder项为true。这会在你新建博客的时候新建一个同名文件夹，写博客需要的资源可以放进去）</strong></p><p>打开 文章名.md即可开始写作</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>在vs里，文件-&gt;高级保存选项<br><img src="/2019/05/31/lesson/619.png" alt=""><br>调成这样，不然中文显示乱码</p><p>文章格式<br><img src="/2019/05/31/lesson/320.png" alt=""></p><h4 id="生成并部署博客"><a href="#生成并部署博客" class="headerlink" title="生成并部署博客"></a>生成并部署博客</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>耐心等待上传完成<br>访问 <a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> 即可看到你写的博文<br>————————————<br>2019.6.1  13:52<br>现在相当于在互联网上有你的网站了<br>快去试试吧<br>下次更如何更换主题与美化博客<br>————————————<br>2019.7.18 18:43<br>接下来说如何美化你的博客</p><h3 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h3><h4 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h4><p>从这个网址选择你的主题<br>建议选择Next主题，比较稳定，功能也很多</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p><h4 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h4><p>然后下载该主题的Zip压缩包</p><p>解压后的文件夹放在博客文件夹的themes文件夹里</p><p>然后在博客文件夹的_config.yml文件中修改</p><p>如图</p><p><img src="/2019/05/31/lesson/718.png" alt=""></p><p><strong>(注意：你可以将主题文件夹重命名，如果它太长的话。只要你配置的与文件夹匹配，就不会有问题。)</strong><br><strong>(提示：在你下载并安装好主题后，可以先本地生成看一下，方便选择)</strong></p><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p>这里不同主题就不太一样了。我用的是Next主题，不过大多数主题配置都差不多。</p><p>无非就是插件和脚本的安装和开关</p><p>参考以下网站</p><p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a><br><a href="https://blog.csdn.net/sunshine940326/article/details/69933696" target="_blank" rel="noopener">hexo+next主题优化</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT 使用文档</a><br>这里主要说一下</p><ul><li>评论功能</li><li>live 2d </li><li>后续更新</li></ul><h5 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h5><p>现在用的多的是基于leancloud云的valine评论插件<br>就是我现在博客用的这个<br>首先<strong>在主题的配置文件_config.yml</strong>中找到Valine</p><p>如图</p><p><img src="/2019/05/31/lesson/191.png" alt=""><br>首先enable改成True</p><p>然后我们需要在leancloud注册一个帐号</p><p><a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud官网</a></p><p>登录后点击页面右上角的控制台，进去后点击创建应用，应用名称随便填(如valine)并创建，<br>之后将鼠标移到应用标签上并点击设置按钮<br>如图<br><img src="/2019/05/31/lesson/c4.png" alt=""><br>把APPID和KEY粘贴到下图对应位置<br><img src="/2019/05/31/lesson/c5.png" alt=""></p><p>然后打开设置 安全中心<br>如图<br><img src="/2019/05/31/lesson/b4.png" alt=""><br><img src="/2019/05/31/lesson/b5.png" alt=""><br>添加你的域名<br>现在应该是 你的名字.github.io<br><strong>以后买了域名记得回来添加</strong><br>如果不出意外的话，这些都完成后等个15分种<br>你部署一下评论就可以正常工作了<br>————————————<br>2019.7.18 20:01</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;就是本博客的搭建教程/笑&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>up主成长之路</title>
    <link href="http://wbqzsl.github.io/2019/05/24/bili/"/>
    <id>http://wbqzsl.github.io/2019/05/24/bili/</id>
    <published>2019-05-24T14:30:25.000Z</published>
    <updated>2019-05-24T14:43:32.128Z</updated>
    
    <content type="html"><![CDATA[<p>最近也一直在努力的做视频成为一个up呢<br><strong>这个链接里面有我做的一些视频</strong><br>制作不易，进来看看呗<br>~(￣▽￣)~*<br><a id="more"></a></p><iframe src="//player.bilibili.com/player.html?aid=53326686&cid=93296156&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=40811392&cid=71673497&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=45248204&cid=79220893&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近也一直在努力的做视频成为一个up呢&lt;br&gt;&lt;strong&gt;这个链接里面有我做的一些视频&lt;/strong&gt;&lt;br&gt;制作不易，进来看看呗&lt;br&gt;~(￣▽￣)~*&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sfml图形库的配置</title>
    <link href="http://wbqzsl.github.io/2019/05/24/c/"/>
    <id>http://wbqzsl.github.io/2019/05/24/c/</id>
    <published>2019-05-24T09:28:30.000Z</published>
    <updated>2019-05-24T14:24:28.613Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=526646591&auto=0&height=66"></iframe><br>好久没更新了<br>前一段时间在学sfml图形库（c++）的使用<br>包括环境的配置,窗口的建立等<br>其简单的易懂的代码语法设计可以说是对入门新手的福音</p><p><img src="/2019/05/24/c/sfmmmm.png" alt=""></p><a id="more"></a><p>其实对于环境的配置，官网上的说明已经很明白了</p><p><a href="https://www.sfml-dev.org/download/sfml/2.5.1/" target="_blank" rel="noopener">官网链接</a></p><p>就算官网需要翻墙，还用很多国内大佬的解释也很清楚</p><p><a href="https://www.cnblogs.com/flowingwind/p/8284579.html" target="_blank" rel="noopener">VS2017编译SFML SDK配制环境详解</a></p><p>所以我这里就补充几条常见的问题吧</p><p>首先，你会看到如果你下载SFML的与你的Visual C ++版本是对应的（一般都是对应的）<br>你可以完全忽略介绍中对于”自己构建SFML“的教程<br>因为那对于初学者确实有点困难</p><p>第二点，建议使用×64的版本<br>这点我想我就不用多说了<br>64位基本完全兼容32位<br>可以避免很多不必要的麻烦</p><p>第三点，关于初始的大绿球的代码<br>  <pre><code> #include &lt;SFML/Graphics.hpp&gt;   //不解释，目前只需要包含图像部分就行了。<br>               int main()                                 </code></pre></p><pre><code>{ sf::RenderWindow window(sf::VideoMode(800, 600), &quot;SFML Application&quot;);     //对新建窗口的封装，第一个参数是一个VideoMode，表示窗口大小，第二个表示窗口标题 sf::CircleShape shape;                                                    //目前的物体，一个圆，暂时把他当成精灵就行了。 shape.setPosition(400, 300); shape.setRadius(40.0f); shape.setFillColor(sf::Color::Cyan); while (window.isOpen()){                                                  //不断执行这个循环 sf::Event event; while (window.pollEvent(event)){                                      //sfml中的事件，每次读取窗口的事件。 if (event.type == sf::Event::Closed)                              //关闭事件，也就是按了窗口上的叉叉  window.close(); if (event.type == sf::Event::KeyPressed){                         //按键事件 if (event.key.code == sf::Keyboard::Escape)                   //如果按了esc，也是关闭的效果  window.close(); }//end if }//end while window.clear();                                                       //每次清屏 window.draw(shape);                                                   //东西还是要画的 window.display();                                                     //画完之后还是要显示的 }                                                                    //end while return 0; }</code></pre><p><br>记得一定要把bin文件夹的dll文件放到exe文件的根目录里哟，我一般都放上（指不定用上哪个）</p><p>最后再说一个我最近碰到的小问题<br>在引用声效时<br>Failed to open sound file “resources/1.wav” (couldn’t open stream)<br>这是在VS里编译的时候DOS窗口出现的提示<br>不要慌，只是在VS里调试时候才会出现<br>直接从外部打开EXE文件就不会出现此提示了<br>个人认为是VS的访问权限及安全保护问题引发的</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=526646591&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;好久没更新了&lt;br&gt;前一段时间在学sfml图形库（c++）的使用&lt;br&gt;包括环境的配置,窗口的建立等&lt;br&gt;其简单的易懂的代码语法设计可以说是对入门新手的福音&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/05/24/c/sfmmmm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>腾讯QQ历年新春活动回顾</title>
    <link href="http://wbqzsl.github.io/2019/01/28/xiaonian/"/>
    <id>http://wbqzsl.github.io/2019/01/28/xiaonian/</id>
    <published>2019-01-28T13:13:27.000Z</published>
    <updated>2019-05-24T14:23:10.372Z</updated>
    
    <content type="html"><![CDATA[<p>今天是传统的小年，意味着新年即将开始。今天，腾讯QQ正式推出了福袋活动，同时也将三款新春小游戏作为活动的一部分发布了出来。</p><p>  此活动将从小年夜（1月28日）持续到大年初三（2月7日）。期间，用户打开手机QQ，即可进入相关活动。进入活动之后，用户可以获得“福袋”，将福袋分享给亲朋好友之后，可以解锁现金红包或者卡券宝箱。<br><a id="more"></a><br>  上面是官方发布的游戏方法<br>  <img src="/2019/01/28/xiaonian/1.png" alt=""><br>  <img src="/2019/01/28/xiaonian/2.png" alt=""><br>  <img src="/2019/01/28/xiaonian/3.png" alt=""><br>  我们来回想一下前几年腾讯QQ发布的新年活动<br>  2015，2016：虚拟“红包”展露头角。基于微信与手Q两大社交平台，腾讯整合联动旗下全平台资源，包括腾讯新闻、腾讯游戏、腾讯开放平台、理财通、QQ浏览器等，实现全覆盖。这两年，用户使用的是下拉消息框来实现“抢”红包。</p><p>  2017：LBS+AR天降红包 2016是虚拟现实元年，而LBS位置服务在2016年也在国外闪亮登场（如精灵宝可梦）。这两者结合后，在当年引起了不小的关注</p><p>  2018：“走运”红包 过年期间从除夕到初三每走100步可以抽取一个红包，每天最多可以抽取100次，10000步封顶。这其实是通过更健康的过年方式带动运动量的提高，同时也可得红包。（幸亏是100步（滑稽））</p><p>  总体来看，腾讯QQ新春活动往往与当年腾讯的工作重点是联系的。那么今年的通过游戏与社交来获得红包的方式，是不是也意味着今年腾讯会把更多的精力投入到游戏，尤其是社交游戏上来。</p><p>  而值得注意的是，今年腾讯推出的三款小游戏，质量十分高，面向对象主要是年轻人。那么通过年轻人的消费水平来看，腾讯以后可能会推出一些玩法非常“公平”，注重竞争与社交的游戏。也就是说不会在游戏平衡上让玩家“氪金”，而更多的通过一些张扬个性（如皮肤）的方面让玩家“充钱”。（不要老说腾讯黑心，一个企业如果不想着怎么盈利，那倒闭算了）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是传统的小年，意味着新年即将开始。今天，腾讯QQ正式推出了福袋活动，同时也将三款新春小游戏作为活动的一部分发布了出来。&lt;/p&gt;
&lt;p&gt;  此活动将从小年夜（1月28日）持续到大年初三（2月7日）。期间，用户打开手机QQ，即可进入相关活动。进入活动之后，用户可以获得“福袋”，将福袋分享给亲朋好友之后，可以解锁现金红包或者卡券宝箱。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Newyear" scheme="http://wbqzsl.github.io/tags/Newyear/"/>
    
  </entry>
  
  <entry>
    <title>bug大清理，第二次更新</title>
    <link href="http://wbqzsl.github.io/2019/01/07/bug-clean/"/>
    <id>http://wbqzsl.github.io/2019/01/07/bug-clean/</id>
    <published>2019-01-07T11:33:33.000Z</published>
    <updated>2019-05-24T14:22:51.665Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=496869422&auto=0&height=66"></iframe><br>经过了一天的测试，发现了不少的bug<br>评论被吃，加载出错…<br>有些是因为兼容性的原因，有些是因为云没有弄好<br>这次，小伙伴们被吃掉的评论可以看到了！<br><a id="more"></a></p><p>我也又加了许多功能（￣︶￣）↗　</p><p>1.实现fork me on github<br>2.实现点击出现桃心效果<br>3.侧边栏社交小图标<br>4.主页文章添加阴影效果<br>5.在网站底部加上访问量(不同于文章访问量)<br>6.添加“DaoVoice 在线联系“在右下角（测试，你可以联系我让我知道这个东西工不工作）<br>7.为博客加上萌萌的看板娘（欢迎调戏）<br>8.打赏功能（测试）<br>9.添加背景</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=496869422&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;经过了一天的测试，发现了不少的bug&lt;br&gt;评论被吃，加载出错…&lt;br&gt;有些是因为兼容性的原因，有些是因为云没有弄好&lt;br&gt;这次，小伙伴们被吃掉的评论可以看到了！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="你好" scheme="http://wbqzsl.github.io/tags/%E4%BD%A0%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>第一次更新完成</title>
    <link href="http://wbqzsl.github.io/2019/01/06/My-blog-2-0/"/>
    <id>http://wbqzsl.github.io/2019/01/06/My-blog-2-0/</id>
    <published>2019-01-06T13:27:34.000Z</published>
    <updated>2019-01-07T11:31:33.587Z</updated>
    
    <content type="html"><![CDATA[<p>又捣鼓了一天，终于，把评论功能弄起来了。（此处应有掌声）<br>评论功能由无后台的Valine评论系统与leancloud云共同完成<br>还顺带装上了网易云的音乐插件和访客统计功能<br>换了个更简洁的主题<br>欢迎吐槽，收藏（话说我是不是该搞个点赞功能）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又捣鼓了一天，终于，把评论功能弄起来了。（此处应有掌声）&lt;br&gt;评论功能由无后台的Valine评论系统与leancloud云共同完成&lt;br&gt;还顺带装上了网易云的音乐插件和访客统计功能&lt;br&gt;换了个更简洁的主题&lt;br&gt;欢迎吐槽，收藏（话说我是不是该搞个点赞功能）&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="你好" scheme="http://wbqzsl.github.io/tags/%E4%BD%A0%E5%A5%BD/"/>
    
  </entry>
  
  <entry>
    <title>world</title>
    <link href="http://wbqzsl.github.io/2019/01/05/world/"/>
    <id>http://wbqzsl.github.io/2019/01/05/world/</id>
    <published>2019-01-05T11:20:58.000Z</published>
    <updated>2019-01-05T12:09:12.998Z</updated>
    
    <content type="html"><![CDATA[<p> 欢迎你访问我的博客<br> 忙了一整天，终于把这个博客整出来了（感谢SomeQ的指导）<br> 这个博客是通过hexo框架部署在GitHub上的，以后将会实现更多功能。<br> 也算是在互联网有了真正属于自己的一个小天地吧（￣︶￣）↗　<br> 希望大家以后常来看看；我将在这里更新很多有趣的事情的<br> 主要是围绕着游戏开发的一些想法和游戏开发日志什么的<br> Hello World！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 欢迎你访问我的博客&lt;br&gt; 忙了一整天，终于把这个博客整出来了（感谢SomeQ的指导）&lt;br&gt; 这个博客是通过hexo框架部署在GitHub上的，以后将会实现更多功能。&lt;br&gt; 也算是在互联网有了真正属于自己的一个小天地吧（￣︶￣）↗　&lt;br&gt; 希望大家以后常来看看；我将
      
    
    </summary>
    
    
      <category term="你好" scheme="http://wbqzsl.github.io/tags/%E4%BD%A0%E5%A5%BD/"/>
    
  </entry>
  
</feed>
